{"version":3,"file":"bundle.js","sources":["../../src/js/index.js"],"sourcesContent":["// M O D E L  ******************************************************************************************\n\nvar model = {\n    //---------------------------\n    // if debug == true logs go to console.\n    debug: true,\n\n    //---------------------------\n    // url where we access GraphQL endpoint = origin + '/graphql'\n    priv_origin: null, \n    set origin(v){\n        this.priv_origin = v\n        document.getElementById('appUrl').innerHTML = '&#x21E2;&nbsp;'+v\n    },\n    get origin(){\n        return this.priv_origin\n    },\n    //---------------------------\n    // templatesCache keeps loaded templates, not to load them repeatedly\n    templatesCache :[],\n\n    //---------------------------\n    get logined(){\n         return (this._loginedUser != null)\n    },\n \n\n    //---------------------------\n    urlParams: new URLSearchParams(window.location.search),\n    // set urlParams(v) {\n    // },\n    // get urlParams() {\n    //     return this._urlParams\n    // },\n\n    //---------------------------\n    _loginedUser: null,\n    set loginedUser(v) {\n        this._loginedUser = v\n        if (v) {\n            document.getElementById(\"userTab\").innerText = v.username\n            // getAuthRoles(model.loginedUser.username)\n        } else {\n            document.getElementById(\"userTab\").innerText = \"\"\n        }\n        refreshApp()\n        \n    },\n    get loginedUser() {\n        return this._loginedUser\n    },\n\n    //---------------------------\n    _selfRegAllowed: false,\n    set selfRegAllowed(v) {\n        this._selfRegAllowed = v\n        if (v) {\n            showElements(\"#selfRegButton\")\n        } else {\n            hideElements(\"#selfRegButton\")\n        }\n    },\n    get selfRegAllowed() {\n        return this._selfRegAllowed\n    },\n    \n    //---------------------------\n    _captchaRequired: false,\n    set captchaRequired(v) {\n        this._captchaRequired = v\n        if (v) {\n            showElements(\"#captcha\")\n        } else {\n            hideElements(\"#captcha\")\n        }\n    },\n    get captchaRequired() {\n        return this._captchaRequired\n    },\n\n    //---------------------------\n    _authRoles: null,\n    set authRoles(v) {\n        this._authRoles = v\n        if (this.isAdmin){\n            showElements('#usersTab')\n            showElements('#rolesTab')\n            showElements('#graphqlTest')\n            showElements('#btnNewApp')\n        } else {\n            hideElements('#usersTab')\n            hideElements('#rolesTab')\n            hideElements('#graphqlTest')\n            hideElements('#btnNewApp')\n\n            // showPage('apps')\n        }\n        renderPage('apps','.app-search-results')\n        \n    },\n    get authRoles() {\n        return this._authRoles\n    },\n    get isAdmin() {\n        if (!model.authRoles) return false\n        return model.authRoles.some(e => e.rolename == \"authadmin\")\n    },\n    \n    //---------------------------\n    _user: null,\n    set user(v) {\n        this._user = v\n        renderPage('user','#userPage')\n    },\n    get user() {\n        return this._user\n    },\n    \n    //---------------------------\n    _app: null,\n    set app(v) {\n        this._app = v\n        renderPage('app','#appPage')\n    },\n    get app() {\n        return this._app\n    },\n    \n    //---------------------------\n    _users: null,\n    set users(v) {\n        this._users = v\n        renderPage('users','.user-search-results')\n    },\n    get users() {\n        return this._users\n    },\n    \n    //---------------------------\n    _apps: null,\n    set apps(v) {\n        this._apps = v\n        renderPage('apps','.app-search-results')\n    },\n    get apps() {\n        return this._apps\n    },\n\n    //---------------------------\n    all_app_options: null,\n    all_user_options:null,\n    //---------------------------\n    _allApps: null,\n    set allApps(v) {\n        this._allApps = v\n        this.all_app_options = createOptions(v, \"appname\", \"description\", \"url\")\n        document.querySelector(\"#allAppsDataList\").innerHTML = this.all_app_options\n    },\n    get allApps() {\n        return this._allApps\n    },\n\n    //---------------------------\n    _allUsers: null,\n    set allUsers(v) {\n        this._allUsers = v\n        this.all_user_options = createOptions(v, \"username\", \"fullname\", \"email\")\n        document.querySelector(\"#allUsersDataList\").innerHTML = this.all_user_options\n    },\n    get allUsers() {\n        return this._allUsers\n    },\n    \n    //---------------------------\n    _app_user_roles: null,\n    set app_user_roles(v) {\n        this._app_user_roles = v\n        renderPage('roles','.app-user-roles-results')\n    },\n    get app_user_roles() {\n        return this._app_user_roles\n    },\n\n    \n}\n\n\n\n// F U N C T I O N S  *********************************************************************************\n\nfunction createOptions(selectValues, keyProp, textProp1, textProp2) {\n    var output = []\n    selectValues && selectValues.forEach(function(value)\n    {\n      output.push(`<option value=\"${value[keyProp]}\">${value[textProp1]} &nbsp;&nbsp;&nbsp; ${value[textProp2]?value[textProp2]:''}</option>`);\n    })\n    let optionText = output.join('')\n    return optionText\n}\n\n\nfunction highlightTab(tabid) {\n    removeClass('.tab', \"underlined\")\n    var tabid0 = tabid.split(\"/\")[0]\n    addClass('#'+tabid0+'Tab', \"underlined\")   \n}\n\n\nfunction showPage(pageid, dontpush){\n    //распарсить pageidExtended\n    var a = pageid.split(\"/\")\n    var pageid0 = a[0]\n    var id = a[1]\n\n    highlightTab(pageid)\n    \n    hideElements('.page')\n    showElements('#'+pageid0+'Page')\n\n\n    // setting focus\n    var text = document.querySelector('#'+pageid0+'Page input[type=\"text\"]')\n    if(text) \n        text.focus()\n\n\n    if (!dontpush){\n        if (!history.state || history.state.pageid != pageid ){\n            history.pushState({pageid:pageid},pageid, \"#\"+pageid) \n        }\n    }\n\n    if (id) {\n        if (pageid0 == \"app\"){\n            getApp(id)\n        } \n        if (pageid0 == \"user\"){\n            getUser(id)\n        }\n    }\n\n\n    return false\n}\n\n\nfunction renderTemplateFile(templateFile, data, targetSelector) {\n\n    function renderTemplate(template) {\n        var rendered = Mustache.render(template, data)\n        document.querySelector(targetSelector).innerHTML = rendered\n    }    \n\n    var cachedTemlpate = model.templatesCache[templateFile]\n    \n    if (cachedTemlpate) {\n        renderTemplate(cachedTemlpate) \n        console.info(\"from cache:\",templateFile)\n        return\n    }\n    \n    // $.get(templateFile, onSuccess);\n    fetch(templateFile).then(x => x.text()).then( t => {\n        model.templatesCache[templateFile]=t \n        renderTemplate(t)\n    })\n}\n\n\nfunction renderPage(pageid, elemSelector) {\n    renderTemplateFile('mustache/'+pageid+'.html', model, elemSelector)\n}\n\n\nfunction alertOnError(e, msg){\n    alert(msg, e)\n}\n\n\n// function getCookie(cname) {\n//     var name = cname + \"=\";\n//     var decodedCookie = decodeURIComponent(document.cookie);\n//     var ca = decodedCookie.split(';');\n//     for(var i = 0; i <ca.length; i++) {\n//       var c = ca[i];\n//       while (c.charAt(0) == ' ') {\n//         c = c.substring(1);\n//       }\n//       if (c.indexOf(name) == 0) {\n//         return c.substring(name.length, c.length);\n//       }\n//     }\n//     return \"\";\n// }\n\n\nvar delayTimeout\nfunction delayFunc(f, delay=500) {\n   clearTimeout(delayTimeout) \n   delayTimeout = setTimeout(f, delay)  \n   return false \n}\n\n\nfunction searchApps() {\n    if (document.querySelector('#chkLocalSearch').checked) {\n        return delayFunc(searchAppsInModel, 100)\n    } else {\n        return delayFunc(formListAppSubmit)\n    }\n}\n\nfunction searchAppsInModel() {\n    if (!model.allApps) return\n    var text = document.querySelector(\"#formListApp input[name='search']\").value.trim().replace(' ','.*')\n    var r = new RegExp(text, 'i')\n    let found = model.allApps.filter((v)=>{\n        var s = Object.values(v).join(' ')\n        return r.test(s)\n    })\n    model.apps = found\n    return false   \n}\n\n\nfunction sortAppsBy(prop) {\n    if (!model._allApps) return false\n    model._allApps.sort( (a,b) => (a[prop]+a.appname)>(b[prop]+b.appname)? 1: -1)\n    model._apps.sort( (a,b) => (a[prop]+a.appname)>(b[prop]+b.appname)? 1: -1 )\n    model.apps = model._apps\n    return false\n}\n\n\nfunction searchUsers() {\n    if (document.querySelector('#chkLocalSearch').checked) {\n        return delayFunc(searchUsersInModel, 100)\n    } else {\n        return delayFunc(formListUserSubmit)\n    }\n}\n\n\nfunction searchUsersInModel() {\n    if (!model.allUsers) return\n    var text = document.querySelector(\"#formListUser input[name='search']\").value.trim().replace(' ','.*')\n    var r = new RegExp(text, 'i')\n    let found = model.allUsers.filter( (v) => r.test (Object.values(v).join(' ')) )\n    model.users = found\n    return false   \n}\n\n\nfunction sortUsersBy(prop) {\n    if (!model._allUsers) return false\n    model._allUsers.sort( (a,b) => (a[prop]+a.username)>(b[prop]+b.username)? 1: -1)\n    model._users.sort( (a,b) => (a[prop]+a.username)>(b[prop]+b.username)? 1: -1 )\n    model.users = model._users\n    return false\n}\n\n\n\n// R E Q U E S T S  *******************************************************\n\nfunction doGraphQLRequest(query, responseHandler, errorElementID) {\n    // $.ajax({ url: \"/graphql\", type: \"POST\", data: { query: query }, error: alertOnError, \n    //     success: (res) => {\n    //         model.debug && console.log(res)\n    //         if (res.errors){\n    //             model.debug && console.log(res.errors[0].message)\n    //             if (errorElementID) {\n    //                 document.getElementById(errorElementID).innerText = res.errors[0].message\n    //             }\n    //             return\n    //         }\n    //         responseHandler(res)\n    //     } \n    // })\n    fetch(model.origin+'/graphql', { \n        method: 'POST', \n        credentials: 'include', \n        body: JSON.stringify({ query: query, variables: {} }) \n    })\n        .then(res => { \n            if (res.ok) {\n                return res.json();\n            }\n            new Error(res)\n        })\n        .then((res) => {\n            model.debug && console.log(res)\n            if (res.errors){\n                model.debug && console.log(res.errors[0].message)\n                if (errorElementID) {\n                    document.getElementById(errorElementID).innerText = res.errors[0].message\n                }\n                return\n            }\n            responseHandler && responseHandler(res)\n        })\n        .catch( e => console.error(e) )    \n    \n}\n\n\n// L O G I N  *****************************************************************************\n\nfunction loginGraphQLFormSubmit(event) {\n    if (event) event.preventDefault()\n    \n    let username = document.getElementById(\"loginUsername\").value\n    let password = document.getElementById(\"loginPassword\").value\n    let captcha =  document.getElementById(\"loginCaptcha\").value\n    \n    \n\n    let query =`\n    query {\n        login(\n        username: \"${username}\",\n        password: \"${password}\",\n        captcha: \"${captcha}\"\n        )\n        }    \n    `\n    function onSuccess(res){\n        getLoginedUser()\n    }   \n\n    doGraphQLRequest(query, onSuccess, \"loginError\")\n    clearLoginForm()\n    return false       \n}\n\n\n\nfunction logoutGraphQLFormSubmit(event) {\n    if (event) event.preventDefault()\n    var query =`\n    query {\n        logout {\n            message\n            username\n          }\n        }\n    `\n\n    function onSuccess(res){\n        model.loginedUser = null\n        refreshApp()\n    }\n\n    doGraphQLRequest(query, onSuccess)\n    return false       \n}\n\n\n\nfunction isSelfRegAllowed(event) {\n    if (event) event.preventDefault()\n    var query =` query { is_selfreg_allowed }`\n\n    function onSuccess(res){\n        model.selfRegAllowed = res.data.is_selfreg_allowed\n    }\n       \n    doGraphQLRequest(query, onSuccess)\n    return false       \n}\n\nfunction isCaptchaRequired(event) {\n    if (event) event.preventDefault()\n    let username = document.getElementById(\"loginUsername\").value   \n    var query =`  query { is_captcha_required(  username: \"${username}\" ) \n        {\n            is_required \n            path\n        } \n    } `\n\n    function onSuccess(res){\n        model.captchaRequired = res.data.is_captcha_required.is_required\n        if (model.captchaRequired) {\n            getNewCaptcha()\n            model.debug && console.log(\"Captcha IS required\")\n        }\n    }\n       \n    doGraphQLRequest(query, onSuccess)\n    return false       \n}\n\n\n\nfunction generateNewPassword(event) {\n    if (event) event.preventDefault()\n\n    let username = document.getElementById(\"loginUsername\").value\n\n    var query =`\n    mutation {\n        generate_password(\n        username: \"${username}\"\n        ) \n        }\n    `\n    function onSuccess(res){\n        alert(res.data.generate_password)\n        refreshApp()\n    }   \n\n    doGraphQLRequest(query, onSuccess)\n    return false       \n}\n\n\n\n// L O G I N E D   U S E R   **********************************************************************************************************************\n\n\nfunction getLoginedUser() {\n    model.loginedUser = null\n    var query =`\n    query {\n        get_logined_user {\n            description\n            email\n            fullname\n            username\n            disabled\n        }\n    }\n    `\n    \n    function onSuccess(res){\n        model.loginedUser = res.data.get_logined_user\n        getAuthRoles(model.loginedUser.username)\n        getUser(model.loginedUser.username)\n    } \n    \n    doGraphQLRequest(query, onSuccess)\n    return false       \n}\n\nfunction getAuthRoles(username) {\n    model.authRoles = null\n\n    var query =`\n    query {\n        list_app_user_role(\n            appname: \"auth\",\n            username: \"${username}\"\n            ) {\n                rolename\n            }\n        }\n        `\n\n    function onSuccess(res){\n        model.authRoles = res.data.list_app_user_role\n    } \n\n    doGraphQLRequest(query, onSuccess)\n    return false       \n}\n\n\n// U S E R S  ***********************************************************************************************************************\n\n\nfunction formListUserSubmit(event) {\n    if (event) event.preventDefault()\n    model.users = null\n    let search = document.querySelector(\"#formListUser input[name='search']\").value\n    \n    var query =`\n    query {\n        list_user(\n        search: \"${search}\",\n        order: \"fullname ASC\"\n        ) {\n            length\n            list {\n              description\n              email\n              fullname\n              username\n              disabled\n            }\n          }\n        }        \n    `\n    \n    function onSuccess(res){\n        model.users = res.data.list_user.list\n    } \n\n    doGraphQLRequest(query, onSuccess)\n    return false       \n}\n\n\n\nfunction formUserSubmit(event, userOperationName = 'create_user') {\n    if (event) event.preventDefault()\n    let username =      document.querySelector(\"#formUser input[name='username']\").value\n    let password =      document.querySelector(\"#formUser input[name='password']\").value\n    let email    =      document.querySelector(\"#formUser input[name='email']\").value\n    let fullname =      document.querySelector(\"#formUser input[name='fullname']\").value\n    let description =   document.querySelector(\"#formUser *[name='description']\").value\n    let disabled =      document.querySelector(\"#formUser input[name='disabled']\").value\n    \n    var query =`\n    mutation {\n        ${userOperationName}(\n        username: \"${username}\",\n        password: \"${password}\",\n        email: \"${email}\",\n        fullname: \"${fullname}\",\n        description: \"${description}\",\n        disabled: ${disabled}\n        ) {\n            description\n            email\n            fullname\n            username\n            disabled\n          }\n\n        }\n    `\n\n    function onSuccess(res){\n        alert(userOperationName+\" success\")\n        refreshData()\n        model.user = res.data[userOperationName]\n        if (userOperationName == 'create_user' && !model.logined) {\n            alert(`\"${username}\" is created.` )\n            showPage('login',true)\n        }\n        getUser(username)\n    }\n\n    doGraphQLRequest(query, onSuccess)\n    return false       \n}\n\n\n\nfunction getUser(username) {\n    model.user = null\n    var query =`\n    query {\n        get_user(\n        username: \"${username}\"\n        ) {\n            description\n            email\n            fullname\n            username\n            disabled\n          }\n        \n        list_app_user_role(\n        username: \"${username}\"\n        ) {\n            app_description\n            appname\n            rolename\n            username\n          }\n        \n        }\n\n    `\n\n    function onSuccess(res){\n        var u = res.data.get_user\n        u.apps = groupApps(res.data.list_app_user_role)\n        // render \n        model.user = u\n    } \n\n    doGraphQLRequest(query, onSuccess)\n    return false       \n}\n\n\n\nfunction groupApps(list_app_user_role) {\n    if (!list_app_user_role) return []\n    \n    let gr = {}\n    for (let aur of list_app_user_role ){\n        if (!gr[aur.appname]) gr[aur.appname] =[]\n        gr[aur.appname].push(aur)\n    }\n\n    let arr = []\n\n    for (let [key, value] of Object.entries(gr)) {\n        let rec = {}\n        rec.appname =key\n        rec.app_description = value[0].app_description\n        rec.items = value\n        arr.push(rec)\n    }\n    return arr\n}\n\n\n\nfunction deleteUser(username) {\n    var query =`\n    mutation {\n        delete_user(\n        username: \"${username}\"\n        ) {\n            username\n          }\n        }\n    `\n    function onSuccess(res){\n        model.user = null\n        refreshData()\n        showPage('users')\n    } \n\n    doGraphQLRequest(query, onSuccess)\n    return false       \n}\n\n\n// A P P S  *******************************************************************\n\nfunction formListAppSubmit(event) {\n    if (event) event.preventDefault()\n    model.apps = null\n    let search = document.querySelector(\"#formListApp input[name='search']\").value\n    var query =`\n    query {\n        list_app(\n        search: \"${search}\",\n        order: \"description ASC\"\n        ) {\n            length\n            list {\n              appname\n              description\n              url\n              rebase\n              public\n            }\n          }\n        }    `\n\n    function onSuccess(res){\n        model.apps = res.data.list_app.list\n    } \n\n    doGraphQLRequest(query, onSuccess)\n    return false       \n}\n\n\n\nfunction formAppSubmit(event, appOperationName = 'create_app') {\n    if (event) event.preventDefault()\n    model.app = null\n    let appname =     document.querySelector(\"#formApp input[name='appname']\"    ).value\n    let url =         document.querySelector(\"#formApp input[name='url']\"        ).value\n    let description = document.querySelector(\"#formApp input[name='description']\").value\n    let rebase =      document.querySelector(\"#formApp input[name='rebase']\"     ).value\n    let _public =      document.querySelector(\"#formApp input[name='public']\"     ).value\n    \n    var query =`\n    mutation {\n        ${appOperationName}(\n        appname: \"${appname}\",\n        url: \"${url}\",\n        description: \"${description}\",\n        rebase: \"${rebase}\",\n        public: \"${_public}\"\n        ) {\n            description\n            appname\n            url\n            rebase\n            public\n          }\n\n        }\n    `\n    function onSuccess(res){\n        alert(appOperationName+\" success\")\n        model.app = res.data[appOperationName]\n        refreshData()\n        getApp(appname)\n    } \n\n    doGraphQLRequest(query, onSuccess)\n    return false       \n}\n\n\n\nfunction getApp(appname) {\n    model.app = null\n\n    var query =`\n    query {\n        get_app(\n        appname: \"${appname}\"\n        ) {\n            description\n            appname\n            url\n            rebase\n            public\n          }\n        \n        list_app_user_role(\n        appname: \"${appname}\"\n        ) {\n            appname\n            rolename\n            user_fullname\n            user_disabled\n            username\n          }\n        \n        }\n\n    `\n\n    function onSuccess(res){\n        var a = res.data.get_app\n        a.users = groupUsers(res.data.list_app_user_role)\n        // render\n        model.app = a\n    } \n\n    doGraphQLRequest(query, onSuccess)\n    return false       \n}\n\n\nfunction groupUsers(list_app_user_role) {\n    let gr = {}\n    for (let aur of list_app_user_role ){\n        if (!gr[aur.username]) gr[aur.username] =[]\n        gr[aur.username].push(aur)\n    }\n\n    let arr = []\n\n    for (let [key, value] of Object.entries(gr)) {\n        let rec = {}\n        rec.username =key\n        rec.user_fullname = value[0].user_fullname\n        rec.items = value\n        arr.push(rec)\n    }\n    return arr\n}\n\n\n\nfunction deleteApp(appname) {\n    var query =`\n    mutation {\n        delete_app(\n        appname: \"${appname}\"\n        ) {\n            appname\n          }\n        }\n    `\n    function onSuccess(res){\n        model.app = null\n        refreshData()\n        showPage('apps') ;\n    } \n\n    doGraphQLRequest(query, onSuccess)\n    return false       \n}\n\n\n\n\n// A P P   U S E R   R O L E   **************************************************************************************************\n\nfunction getAllApps(event) {\n    if (event) event.preventDefault()\n    model.allApps = null\n    var query =`\n    query {\n        list_app(\n        order: \"appname ASC\"\n        ) {\n            length\n            list {\n              appname\n              description\n              url\n              rebase\n              public \n            }\n          }\n        }    `\n\n    function onSuccess(res){\n        model.allApps = res.data.list_app.list\n    } \n\n    doGraphQLRequest(query, onSuccess)\n    return false       \n}\n\n\nfunction getAllUsers(event) {\n    if (event) event.preventDefault()\n    model.allUsers = null\n    var query =`\n    query {\n        list_user(\n        order: \"fullname ASC\"\n        ) {\n            length\n            list {\n              username\n              fullname\n              email\n              description\n              disabled\n            }\n          }\n        }    `\n\n    function onSuccess(res){\n        model.allUsers = res.data.list_user.list\n    } \n\n    doGraphQLRequest(query, onSuccess)\n    return false       \n}\n\nfunction formListRoleSubmit(event) {\n    if (event && event.preventDefault ) event.preventDefault()\n    model.app_user_roles = null\n    let appname =  document.getElementById(\"allApps\").value\n    let username = document.getElementById(\"allUsers\").value\n    if (!appname || !username) \n        return\n\n    var query =`\n    query {\n        list_app_user_role(\n        appname: \"${appname}\",\n        username: \"${username}\"\n        ) {\n            rolename\n          }\n        }        \n        `\n\n    function onSuccess(res){\n        model.app_user_roles = res.data.list_app_user_role\n    } \n\n    doGraphQLRequest(query, onSuccess)\n    return false       \n}\n\n\nfunction modifyRole(action,appname,username,rolename, onsuccess ) {\n    if (!appname || !username || !rolename) return\n\n    var query =`\n    mutation {\n        ${action}_app_user_role(\n        appname: \"${appname}\",\n        username: \"${username}\",\n        rolename: \"${rolename}\"\n        ) {\n            rolename\n            appname\n            username\n          }\n        }\n    `\n    function onSuccess(res){\n        if (onsuccess) onsuccess()\n    }\n\n    doGraphQLRequest(query, onSuccess)\n    return false       \n}\n\n// works when input values on roles page change\nfunction refreshRoles() {\n    let allUsersValue = document.getElementById(\"allUsers\").value\n    if (allUsersValue) {\n        let ui = document.querySelector(`#allUsersDataList>option[value='${allUsersValue}']`).innerText\n        document.getElementById('userInfo').innerText = ui   \n    }\n\n    let allAppsValue = document.getElementById(\"allApps\").value\n    if (allAppsValue) {\n        let ai = document.querySelector(`#allAppsDataList>option[value='${allAppsValue}']`).innerText\n        document.getElementById('appInfo').innerText = ai\n    }\n\n    if (allUsersValue && allAppsValue) \n        formListRoleSubmit() \n}\n\n\nfunction filterRows(selector, value ){\n    var v = value.toLowerCase()\n    var rows = document.querySelectorAll(selector)\n    rows.forEach(e => {\n        var txt = e.innerText.toLowerCase()\n        if (txt.indexOf(v) == -1) {\n            e.classList.add(\"hidden\")\n        } else {\n            e.classList.remove(\"hidden\")\n        }\n    });\n}\n\nfunction hideElements(selector) {\n    document.querySelectorAll(selector).forEach(e => e.classList.add(\"hidden\"));\n}\n\n\nfunction showElements(selector) {\n    document.querySelectorAll(selector).forEach(e => e.classList.remove(\"hidden\"));\n}\n\nfunction addClass(selector, classname) {\n    document.querySelectorAll(selector).forEach(e => e.classList.add(classname));\n}\n\nfunction removeClass(selector, classname) {\n    document.querySelectorAll(selector).forEach(e => e.classList.remove(classname));\n}\n\n\nfunction hidePassword() {\n    document.querySelector(\"#formUser input[name='password']\").setAttribute('type','password')\n}\n\nfunction showPassword() {\n    document.querySelector(\"#formUser input[name='password']\").setAttribute('type','text')\n}\n\nfunction generatePassword() {\n    function newPassword (n) {\n        let pickSymbol =(s) => s[Math.floor(Math.random()*s.length)]\n        var symbolSets =[\"bcdfghjklmnpqrstvwxz\",\"aeiou\"] \n        var password = ''\n        for (let i=0; i<n; i++){\n            password += pickSymbol(symbolSets[i%symbolSets.length])\n        }\n        return password\n    }\n\n    document.querySelector(\"#formUser input[name='password']\").value = newPassword(9)\n}\n\n\nfunction getNewCaptcha() {\n    let uri = model.origin+\"/captcha?\"+ new Date().getTime()\n    document.getElementById(\"captchaImg\").src = uri\n    return false\n}\n\n\nfunction clearLoginForm() {\n    document.getElementById(\"loginUsername\").value = \"\"\n    document.getElementById(\"loginPassword\").value = \"\"\n    document.getElementById(\"loginCaptcha\").value = \"\"\n    document.getElementById(\"loginError\").innerText = \"\"\n}\n\n\nfunction logout() {\n    logoutGraphQLFormSubmit()\n    clearLoginForm()\n    showPage('login',true)\n    isSelfRegAllowed()\n    model.captchaRequired = false\n    return false\n}\n\n\n// refreshData() если пользователь залогинен наполняет модель данными,\n// в противном случае или обнуляет модель.\nfunction refreshData() {\n    if (model.logined) {\n        getAllApps()\n        getAllUsers()\n        formListAppSubmit()\n        formListUserSubmit()  \n    } else {\n        // nullify model's inner props\n        for (const k of Object.keys(model)) {\n            if (k.startsWith('_')) {\n                model[k] = null\n            }\n        }\n        isSelfRegAllowed()\n   }    \n}\n\nfunction getCurrentPageID(){\n    var p = location.hash.slice(1)\n    return p ? p : 'apps'\n}\n\n// refreshApp обновляет данные модели и GUI\nfunction refreshApp() {\n    refreshData()\n    \n    if (model.logined) {\n        let page = getCurrentPageID()\n        showPage(page) \n        showElements('#menu')     \n    } else {\n        showPage('login',true)\n        hideElements('#menu')\n    }  \n}\n\n\n\nwindow.onhashchange = function(event) {\n    model.debug && console.log(\"onhashchange\", event)\n    var newpage = event.newURL.split('#')[1]\n    if (newpage) \n        showPage(newpage)\n}\n\n\nfunction setAppParams(){\n    var url = model.urlParams.get('url')\n    var css = model.urlParams.get('css')\n    if (css) document.getElementById('theme').href = css\n    model.origin = url ? url : 'https://auth-proxy.rg.ru'\n    //?\n    model.captchaRequired = false\n}\n\n\n\nfunction init() {\n    setAppParams()\n    getLoginedUser()\n    refreshApp()      \n}\n\n\n// O N   P A G E   L O A D  ****************************************************************************************\n\ninit()\n"],"names":["delayTimeout","model","debug","priv_origin","origin","v","this","document","getElementById","innerHTML","templatesCache","logined","_loginedUser","urlParams","URLSearchParams","window","location","search","loginedUser","innerText","username","refreshApp","_selfRegAllowed","selfRegAllowed","showElements","hideElements","_captchaRequired","captchaRequired","_authRoles","authRoles","isAdmin","renderPage","some","e","rolename","_user","user","_app","app","_users","users","_apps","apps","all_app_options","all_user_options","_allApps","allApps","createOptions","querySelector","_allUsers","allUsers","_app_user_roles","app_user_roles","selectValues","keyProp","textProp1","textProp2","output","forEach","value","push","join","highlightTab","tabid","removeClass","addClass","split","showPage","pageid","dontpush","a","pageid0","id","text","focus","history","state","pushState","getApp","getUser","renderTemplateFile","templateFile","data","targetSelector","renderTemplate","template","rendered","Mustache","render","cachedTemlpate","console","info","fetch","then","x","t","elemSelector","alertOnError","msg","alert","delayFunc","f","delay","clearTimeout","setTimeout","searchApps","checked","searchAppsInModel","formListAppSubmit","trim","replace","r","RegExp","found","filter","s","Object","values","test","sortAppsBy","prop","sort","b","appname","searchUsers","searchUsersInModel","formListUserSubmit","sortUsersBy","doGraphQLRequest","query","responseHandler","errorElementID","method","credentials","body","JSON","stringify","variables","res","ok","json","Error","log","errors","message","catch","error","loginGraphQLFormSubmit","event","preventDefault","getLoginedUser","clearLoginForm","logoutGraphQLFormSubmit","isSelfRegAllowed","is_selfreg_allowed","isCaptchaRequired","is_captcha_required","is_required","getNewCaptcha","generateNewPassword","generate_password","get_logined_user","getAuthRoles","list_app_user_role","list_user","list","formUserSubmit","userOperationName","password","email","fullname","description","disabled","refreshData","u","get_user","groupApps","gr","aur","arr","key","entries","rec","app_description","items","deleteUser","list_app","formAppSubmit","appOperationName","url","rebase","_public","get_app","groupUsers","user_fullname","deleteApp","getAllApps","getAllUsers","formListRoleSubmit","modifyRole","action","onsuccess","refreshRoles","allUsersValue","ui","allAppsValue","ai","filterRows","selector","toLowerCase","querySelectorAll","indexOf","classList","add","remove","classname","hidePassword","setAttribute","showPassword","generatePassword","n","pickSymbol","Math","floor","random","length","symbolSets","i","newPassword","uri","Date","getTime","src","logout","k","keys","startsWith","getCurrentPageID","p","hash","slice","setAppParams","get","css","href","init","onhashchange","newpage","newURL"],"mappings":"aAEA,IAsSIA,aAtSAC,MAAQ,CAGRC,OAAO,EAIPC,YAAa,KACbC,WAAWC,GACPC,KAAKH,YAAcE,EACnBE,SAASC,eAAe,UAAUC,UAAY,iBAAiBJ,GAEnED,aACI,OAAOE,KAAKH,aAIhBO,eAAgB,GAGhBC,cACK,OAA6B,MAArBL,KAAKM,cAKlBC,UAAW,IAAIC,gBAAgBC,OAAOC,SAASC,QAQ/CL,aAAc,KACdM,gBAAgBb,GACZC,KAAKM,aAAeP,EAEhBE,SAASC,eAAe,WAAWW,UADnCd,EAC+CA,EAAEe,SAGF,GAEnDC,cAGJH,kBACI,OAAOZ,KAAKM,cAIhBU,iBAAiB,EACjBC,mBAAmBlB,GACfC,KAAKgB,gBAAkBjB,EACnBA,EACAmB,aAAa,kBAEbC,aAAa,mBAGrBF,qBACI,OAAOjB,KAAKgB,iBAIhBI,kBAAkB,EAClBC,oBAAoBtB,GAChBC,KAAKoB,iBAAmBrB,EACpBA,EACAmB,aAAa,YAEbC,aAAa,aAGrBE,sBACI,OAAOrB,KAAKoB,kBAIhBE,WAAY,KACZC,cAAcxB,GACVC,KAAKsB,WAAavB,EACdC,KAAKwB,SACLN,aAAa,aACbA,aAAa,aACbA,aAAa,gBACbA,aAAa,gBAEbC,aAAa,aACbA,aAAa,aACbA,aAAa,gBACbA,aAAa,eAIjBM,WAAW,OAAO,wBAGtBF,gBACI,OAAOvB,KAAKsB,YAEhBE,cACI,QAAK7B,MAAM4B,WACJ5B,MAAM4B,UAAUG,KAAKC,GAAmB,aAAdA,EAAEC,WAIvCC,MAAO,KACPC,SAAS/B,GACLC,KAAK6B,MAAQ9B,EACb0B,WAAW,OAAO,cAEtBK,WACI,OAAO9B,KAAK6B,OAIhBE,KAAM,KACNC,QAAQjC,GACJC,KAAK+B,KAAOhC,EACZ0B,WAAW,MAAM,aAErBO,UACI,OAAOhC,KAAK+B,MAIhBE,OAAQ,KACRC,UAAUnC,GACNC,KAAKiC,OAASlC,EACd0B,WAAW,QAAQ,yBAEvBS,YACI,OAAOlC,KAAKiC,QAIhBE,MAAO,KACPC,SAASrC,GACLC,KAAKmC,MAAQpC,EACb0B,WAAW,OAAO,wBAEtBW,WACI,OAAOpC,KAAKmC,OAIhBE,gBAAiB,KACjBC,iBAAiB,KAEjBC,SAAU,KACVC,YAAYzC,GACRC,KAAKuC,SAAWxC,EAChBC,KAAKqC,gBAAkBI,cAAc1C,EAAG,UAAW,cAAe,OAClEE,SAASyC,cAAc,oBAAoBvC,UAAYH,KAAKqC,iBAEhEG,cACI,OAAOxC,KAAKuC,UAIhBI,UAAW,KACXC,aAAa7C,GACTC,KAAK2C,UAAY5C,EACjBC,KAAKsC,iBAAmBG,cAAc1C,EAAG,WAAY,WAAY,SACjEE,SAASyC,cAAc,qBAAqBvC,UAAYH,KAAKsC,kBAEjEM,eACI,OAAO5C,KAAK2C,WAIhBE,gBAAiB,KACjBC,mBAAmB/C,GACfC,KAAK6C,gBAAkB9C,EACvB0B,WAAW,QAAQ,4BAEvBqB,qBACI,OAAO9C,KAAK6C,kBAUpB,SAASJ,cAAcM,EAAcC,EAASC,EAAWC,GACrD,IAAIC,EAAS,GAMb,OALAJ,GAAgBA,EAAaK,SAAQ,SAASC,GAE5CF,EAAOG,KAAK,kBAAkBD,EAAML,OAAaK,EAAMJ,yBAAiCI,EAAMH,GAAWG,EAAMH,GAAW,kBAE3GC,EAAOI,KAAK,IAKjC,SAASC,aAAaC,GAClBC,YAAY,OAAQ,cAEpBC,SAAS,IADIF,EAAMG,MAAM,KAAK,GACV,MAAO,cAI/B,SAASC,SAASC,EAAQC,GAEtB,IAAIC,EAAIF,EAAOF,MAAM,KACjBK,EAAUD,EAAE,GACZE,EAAKF,EAAE,GAEXR,aAAaM,GAEb3C,aAAa,SACbD,aAAa,IAAI+C,EAAQ,QAIzB,IAAIE,EAAOlE,SAASyC,cAAc,IAAIuB,EAAQ,2BAqB9C,OApBGE,GACCA,EAAKC,QAGJL,GACIM,QAAQC,OAASD,QAAQC,MAAMR,QAAUA,GAC1CO,QAAQE,UAAU,CAACT,OAAOA,GAAQA,EAAQ,IAAIA,GAIlDI,IACe,OAAXD,GACAO,OAAON,GAEI,QAAXD,GACAQ,QAAQP,KAKT,EAIX,SAASQ,mBAAmBC,EAAcC,EAAMC,GAE5C,SAASC,EAAeC,GACpB,IAAIC,EAAWC,SAASC,OAAOH,EAAUH,GACzC3E,SAASyC,cAAcmC,GAAgB1E,UAAY6E,EAGvD,IAAIG,EAAiBxF,MAAMS,eAAeuE,GAE1C,GAAIQ,EAGA,OAFAL,EAAeK,QACfC,QAAQC,KAAK,cAAcV,GAK/BW,MAAMX,GAAcY,KAAKC,GAAKA,EAAErB,QAAQoB,KAAME,IAC1C9F,MAAMS,eAAeuE,GAAcc,EACnCX,EAAeW,KAKvB,SAAShE,WAAWqC,EAAQ4B,GACxBhB,mBAAmB,YAAYZ,EAAO,QAASnE,MAAO+F,GAI1D,SAASC,aAAahE,EAAGiE,GACrBC,MAAMD,EAAKjE,GAsBf,SAASmE,UAAUC,EAAGC,EAAM,KAGzB,OAFAC,aAAavG,cACbA,aAAewG,WAAWH,EAAGC,IACtB,EAIV,SAASG,aACL,OAAIlG,SAASyC,cAAc,mBAAmB0D,QACnCN,UAAUO,kBAAmB,KAE7BP,UAAUQ,mBAIzB,SAASD,oBACL,IAAK1G,MAAM6C,QAAS,OACpB,IAAI2B,EAAOlE,SAASyC,cAAc,qCAAqCW,MAAMkD,OAAOC,QAAQ,IAAI,MAC5FC,EAAI,IAAIC,OAAOvC,EAAM,KACzB,IAAIwC,EAAQhH,MAAM6C,QAAQoE,OAAQ7G,IAC9B,IAAI8G,EAAIC,OAAOC,OAAOhH,GAAGwD,KAAK,KAC9B,OAAOkD,EAAEO,KAAKH,KAGlB,OADAlH,MAAMyC,KAAOuE,GACN,EAIX,SAASM,WAAWC,GAChB,QAAKvH,MAAM4C,WACX5C,MAAM4C,SAAS4E,KAAM,CAACnD,EAAEoD,IAAOpD,EAAEkD,GAAMlD,EAAEqD,QAAUD,EAAEF,GAAME,EAAEC,QAAU,GAAI,GAC3E1H,MAAMwC,MAAMgF,KAAM,CAACnD,EAAEoD,IAAOpD,EAAEkD,GAAMlD,EAAEqD,QAAUD,EAAEF,GAAME,EAAEC,QAAU,GAAI,GACxE1H,MAAMyC,KAAOzC,MAAMwC,OACZ,GAIX,SAASmF,cACL,OAAIrH,SAASyC,cAAc,mBAAmB0D,QACnCN,UAAUyB,mBAAoB,KAE9BzB,UAAU0B,oBAKzB,SAASD,qBACL,IAAK5H,MAAMiD,SAAU,OACrB,IAAIuB,EAAOlE,SAASyC,cAAc,sCAAsCW,MAAMkD,OAAOC,QAAQ,IAAI,MAC7FC,EAAI,IAAIC,OAAOvC,EAAM,KACzB,IAAIwC,EAAQhH,MAAMiD,SAASgE,OAAS7G,GAAM0G,EAAEO,KAAMF,OAAOC,OAAOhH,GAAGwD,KAAK,OAExE,OADA5D,MAAMuC,MAAQyE,GACP,EAIX,SAASc,YAAYP,GACjB,QAAKvH,MAAMgD,YACXhD,MAAMgD,UAAUwE,KAAM,CAACnD,EAAEoD,IAAOpD,EAAEkD,GAAMlD,EAAElD,SAAWsG,EAAEF,GAAME,EAAEtG,SAAW,GAAI,GAC9EnB,MAAMsC,OAAOkF,KAAM,CAACnD,EAAEoD,IAAOpD,EAAEkD,GAAMlD,EAAElD,SAAWsG,EAAEF,GAAME,EAAEtG,SAAW,GAAI,GAC3EnB,MAAMuC,MAAQvC,MAAMsC,QACb,GAOX,SAASyF,iBAAiBC,EAAOC,EAAiBC,GAc9CvC,MAAM3F,MAAMG,OAAO,WAAY,CAC3BgI,OAAQ,OACRC,YAAa,UACbC,KAAMC,KAAKC,UAAU,CAAEP,MAAOA,EAAOQ,UAAW,OAE/C5C,KAAK6C,IACF,GAAIA,EAAIC,GACJ,OAAOD,EAAIE,OAEf,IAAIC,MAAMH,KAEb7C,KAAM6C,IAEH,GADAzI,MAAMC,OAASwF,QAAQoD,IAAIJ,GACvBA,EAAIK,OAKJ,OAJA9I,MAAMC,OAASwF,QAAQoD,IAAIJ,EAAIK,OAAO,GAAGC,cACrCb,IACA5H,SAASC,eAAe2H,GAAgBhH,UAAYuH,EAAIK,OAAO,GAAGC,UAI1Ed,GAAmBA,EAAgBQ,KAEtCO,MAAOhH,GAAKyD,QAAQwD,MAAMjH,IAOnC,SAASkH,uBAAuBC,GAwB5B,OAvBIA,GAAOA,EAAMC,iBAqBjBrB,iBAbW,qDANIzH,SAASC,eAAe,iBAAiBmD,+BACzCpD,SAASC,eAAe,iBAAiBmD,8BACzCpD,SAASC,eAAe,gBAAgBmD,0CAavD,SAAmB+E,GACfY,mBAG+B,cACnCC,kBACO,EAKX,SAASC,wBAAwBJ,GACzBA,GAAOA,EAAMC,iBAgBjB,OADArB,iBAdW,4GASX,SAAmBU,GACfzI,MAAMiB,YAAc,KACpBG,iBAIG,EAKX,SAASoI,iBAAiBL,GAClBA,GAAOA,EAAMC,iBAQjB,OADArB,iBANW,iCAEX,SAAmBU,GACfzI,MAAMsB,eAAiBmH,EAAIxD,KAAKwE,uBAI7B,EAGX,SAASC,kBAAkBP,GAmBvB,OAlBIA,GAAOA,EAAMC,iBAiBjBrB,iBAfW,8CADIzH,SAASC,eAAe,iBAAiBmD,wFAQxD,SAAmB+E,GACfzI,MAAM0B,gBAAkB+G,EAAIxD,KAAK0E,oBAAoBC,YACjD5J,MAAM0B,kBACNmI,gBACA7J,MAAMC,OAASwF,QAAQoD,IAAI,4BAK5B,EAKX,SAASiB,oBAAoBX,GAkBzB,OAjBIA,GAAOA,EAAMC,iBAgBjBrB,iBAZW,oEAFIzH,SAASC,eAAe,iBAAiBmD,uCASxD,SAAmB+E,GACfvC,MAAMuC,EAAIxD,KAAK8E,mBACf3I,iBAIG,EAQX,SAASiI,iBACLrJ,MAAMiB,YAAc,KAoBpB,OADA8G,iBAlBW,mLAYX,SAAmBU,GACfzI,MAAMiB,YAAcwH,EAAIxD,KAAK+E,iBAC7BC,aAAajK,MAAMiB,YAAYE,UAC/B2D,QAAQ9E,MAAMiB,YAAYE,cAIvB,EAGX,SAAS8I,aAAa9I,GAmBlB,OAlBAnB,MAAM4B,UAAY,KAiBlBmG,iBAfW,oGAIU5G,qFAOrB,SAAmBsH,GACfzI,MAAM4B,UAAY6G,EAAIxD,KAAKiF,uBAIxB,EAOX,SAASrC,mBAAmBsB,GA4BxB,OA3BIA,GAAOA,EAAMC,iBACjBpJ,MAAMuC,MAAQ,KAyBdwF,iBAtBW,uDAFEzH,SAASyC,cAAc,sCAAsCW,4QAoB1E,SAAmB+E,GACfzI,MAAMuC,MAAQkG,EAAIxD,KAAKkF,UAAUC,SAI9B,EAKX,SAASC,eAAelB,EAAOmB,EAAoB,eAC3CnB,GAAOA,EAAMC,iBACjB,IAAIjI,EAAgBb,SAASyC,cAAc,oCAAoCW,MAC3E6G,EAAgBjK,SAASyC,cAAc,oCAAoCW,MAC3E8G,EAAgBlK,SAASyC,cAAc,iCAAiCW,MACxE+G,EAAgBnK,SAASyC,cAAc,oCAAoCW,MAC3EgH,EAAgBpK,SAASyC,cAAc,mCAAmCW,MAC1EiH,EAAgBrK,SAASyC,cAAc,oCAAoCW,MAkC/E,OADAqE,iBA/BW,6BAELuC,0BACWnJ,2BACAoJ,wBACHC,2BACGC,8BACGC,0BACJC,gKAYhB,SAAmBlC,GACfvC,MAAMoE,EAAkB,YACxBM,cACA5K,MAAMmC,KAAOsG,EAAIxD,KAAKqF,GACG,eAArBA,GAAuCtK,MAAMU,UAC7CwF,MAAM,IAAI/E,kBACV+C,SAAS,SAAQ,IAErBY,QAAQ3D,OAIL,EAKX,SAAS2D,QAAQ3D,GAmCb,OAlCAnB,MAAMmC,KAAO,KAiCb4F,iBAhCW,wDAGM5G,yMAUAA,2JAYjB,SAAmBsH,GACf,IAAIoC,EAAIpC,EAAIxD,KAAK6F,SACjBD,EAAEpI,KAAOsI,UAAUtC,EAAIxD,KAAKiF,oBAE5BlK,MAAMmC,KAAO0I,MAIV,EAKX,SAASE,UAAUb,GACf,IAAKA,EAAoB,MAAO,GAEhC,IAAIc,EAAK,GACT,IAAK,IAAIC,KAAOf,EACPc,EAAGC,EAAIvD,WAAUsD,EAAGC,EAAIvD,SAAU,IACvCsD,EAAGC,EAAIvD,SAAS/D,KAAKsH,GAGzB,IAAIC,EAAM,GAEV,IAAK,IAAKC,EAAKzH,KAAUyD,OAAOiE,QAAQJ,GAAK,CACzC,IAAIK,EAAM,GACVA,EAAI3D,QAASyD,EACbE,EAAIC,gBAAkB5H,EAAM,GAAG4H,gBAC/BD,EAAIE,MAAQ7H,EACZwH,EAAIvH,KAAK0H,GAEb,OAAOH,EAKX,SAASM,WAAWrK,GAiBhB,OADA4G,iBAfW,8DAGM5G,uEAMjB,SAAmBsH,GACfzI,MAAMmC,KAAO,KACbyI,cACA1G,SAAS,aAIN,EAMX,SAASyC,kBAAkBwC,GA0BvB,OAzBIA,GAAOA,EAAMC,iBACjBpJ,MAAMyC,KAAO,KAuBbsF,iBArBW,sDADEzH,SAASyC,cAAc,qCAAqCW,8PAkBzE,SAAmB+E,GACfzI,MAAMyC,KAAOgG,EAAIxD,KAAKwG,SAASrB,SAI5B,EAKX,SAASsB,cAAcvC,EAAOwC,EAAmB,cACzCxC,GAAOA,EAAMC,iBACjBpJ,MAAMqC,IAAM,KACZ,IAAIqF,EAAcpH,SAASyC,cAAc,kCAAsCW,MAC3EkI,EAActL,SAASyC,cAAc,8BAAsCW,MAC3EgH,EAAcpK,SAASyC,cAAc,sCAAsCW,MAC3EmI,EAAcvL,SAASyC,cAAc,iCAAsCW,MAC3EoI,EAAexL,SAASyC,cAAc,iCAAsCW,MA4BhF,OADAqE,iBAzBW,6BAEL4D,yBACUjE,sBACJkE,8BACQlB,yBACLmB,yBACAC,0JAWf,SAAmBrD,GACfvC,MAAMyF,EAAiB,YACvB3L,MAAMqC,IAAMoG,EAAIxD,KAAK0G,GACrBf,cACA/F,OAAO6C,OAIJ,EAKX,SAAS7C,OAAO6C,GAqCZ,OApCA1H,MAAMqC,IAAM,KAmCZ0F,iBAjCW,sDAGKL,iMAUAA,oLAahB,SAAmBe,GACf,IAAIpE,EAAIoE,EAAIxD,KAAK8G,QACjB1H,EAAE9B,MAAQyJ,WAAWvD,EAAIxD,KAAKiF,oBAE9BlK,MAAMqC,IAAMgC,MAIT,EAIX,SAAS2H,WAAW9B,GAChB,IAAIc,EAAK,GACT,IAAK,IAAIC,KAAOf,EACPc,EAAGC,EAAI9J,YAAW6J,EAAGC,EAAI9J,UAAW,IACzC6J,EAAGC,EAAI9J,UAAUwC,KAAKsH,GAG1B,IAAIC,EAAM,GAEV,IAAK,IAAKC,EAAKzH,KAAUyD,OAAOiE,QAAQJ,GAAK,CACzC,IAAIK,EAAM,GACVA,EAAIlK,SAAUgK,EACdE,EAAIY,cAAgBvI,EAAM,GAAGuI,cAC7BZ,EAAIE,MAAQ7H,EACZwH,EAAIvH,KAAK0H,GAEb,OAAOH,EAKX,SAASgB,UAAUxE,GAiBf,OADAK,iBAfW,4DAGKL,sEAMhB,SAAmBe,GACfzI,MAAMqC,IAAM,KACZuI,cACA1G,SAAS,YAIN,EAQX,SAASiI,WAAWhD,GACZA,GAAOA,EAAMC,iBACjBpJ,MAAM6C,QAAU,KAsBhB,OADAkF,iBApBW,oRAgBX,SAAmBU,GACfzI,MAAM6C,QAAU4F,EAAIxD,KAAKwG,SAASrB,SAI/B,EAIX,SAASgC,YAAYjD,GACbA,GAAOA,EAAMC,iBACjBpJ,MAAMiD,SAAW,KAsBjB,OADA8E,iBApBW,4RAgBX,SAAmBU,GACfzI,MAAMiD,SAAWwF,EAAIxD,KAAKkF,UAAUC,SAIjC,EAGX,SAASiC,mBAAmBlD,GACpBA,GAASA,EAAMC,gBAAiBD,EAAMC,iBAC1CpJ,MAAMmD,eAAiB,KACvB,IAAIuE,EAAWpH,SAASC,eAAe,WAAWmD,MAC9CvC,EAAWb,SAASC,eAAe,YAAYmD,MACnD,GAAKgE,GAAYvG,EAmBjB,OADA4G,iBAfW,iEAGKL,2BACCvG,mFAOjB,SAAmBsH,GACfzI,MAAMmD,eAAiBsF,EAAIxD,KAAKiF,uBAI7B,EAIX,SAASoC,WAAWC,EAAO7E,EAAQvG,EAASc,EAAUuK,GAClD,GAAK9E,GAAYvG,GAAac,EAoB9B,OADA8F,iBAjBW,6BAELwE,uCACU7E,2BACCvG,2BACAc,kHAQjB,SAAmBwG,GACX+D,GAAWA,QAIZ,EAIX,SAASC,eACL,IAAIC,EAAgBpM,SAASC,eAAe,YAAYmD,MACxD,GAAIgJ,EAAe,CACf,IAAIC,EAAKrM,SAASyC,cAAc,mCAAmC2J,OAAmBxL,UACtFZ,SAASC,eAAe,YAAYW,UAAYyL,EAGpD,IAAIC,EAAetM,SAASC,eAAe,WAAWmD,MACtD,GAAIkJ,EAAc,CACd,IAAIC,EAAKvM,SAASyC,cAAc,kCAAkC6J,OAAkB1L,UACpFZ,SAASC,eAAe,WAAWW,UAAY2L,EAG/CH,GAAiBE,GACjBP,qBAIR,SAASS,WAAWC,EAAUrJ,GAC1B,IAAItD,EAAIsD,EAAMsJ,cACH1M,SAAS2M,iBAAiBF,GAChCtJ,QAAQzB,KAEc,GADbA,EAAEd,UAAU8L,cACdE,QAAQ9M,GACZ4B,EAAEmL,UAAUC,IAAI,UAEhBpL,EAAEmL,UAAUE,OAAO,YAK/B,SAAS7L,aAAauL,GAClBzM,SAAS2M,iBAAiBF,GAAUtJ,QAAQzB,GAAKA,EAAEmL,UAAUC,IAAI,WAIrE,SAAS7L,aAAawL,GAClBzM,SAAS2M,iBAAiBF,GAAUtJ,QAAQzB,GAAKA,EAAEmL,UAAUE,OAAO,WAGxE,SAASrJ,SAAS+I,EAAUO,GACxBhN,SAAS2M,iBAAiBF,GAAUtJ,QAAQzB,GAAKA,EAAEmL,UAAUC,IAAIE,IAGrE,SAASvJ,YAAYgJ,EAAUO,GAC3BhN,SAAS2M,iBAAiBF,GAAUtJ,QAAQzB,GAAKA,EAAEmL,UAAUE,OAAOC,IAIxE,SAASC,eACLjN,SAASyC,cAAc,oCAAoCyK,aAAa,OAAO,YAGnF,SAASC,eACLnN,SAASyC,cAAc,oCAAoCyK,aAAa,OAAO,QAGnF,SAASE,mBAWLpN,SAASyC,cAAc,oCAAoCW,MAV3D,SAAsBiK,GAClB,IAAIC,EAAa1G,GAAMA,EAAE2G,KAAKC,MAAMD,KAAKE,SAAS7G,EAAE8G,SACpD,IAAIC,EAAY,CAAC,uBAAuB,SACpC1D,EAAW,GACf,IAAK,IAAI2D,EAAE,EAAGA,EAAEP,EAAGO,IACf3D,GAAYqD,EAAWK,EAAWC,EAAED,EAAWD,SAEnD,OAAOzD,EAGwD4D,CAAY,GAInF,SAAStE,gBACL,IAAIuE,EAAMpO,MAAMG,OAAO,aAAa,IAAIkO,MAAOC,UAE/C,OADAhO,SAASC,eAAe,cAAcgO,IAAMH,GACrC,EAIX,SAAS9E,iBACLhJ,SAASC,eAAe,iBAAiBmD,MAAQ,GACjDpD,SAASC,eAAe,iBAAiBmD,MAAQ,GACjDpD,SAASC,eAAe,gBAAgBmD,MAAQ,GAChDpD,SAASC,eAAe,cAAcW,UAAY,GAItD,SAASsN,SAML,OALAjF,0BACAD,iBACApF,SAAS,SAAQ,GACjBsF,mBACAxJ,MAAM0B,iBAAkB,GACjB,EAMX,SAASkJ,cACL,GAAI5K,MAAMU,QACNyL,aACAC,cACAzF,oBACAkB,yBACG,CAEH,IAAK,MAAM4G,KAAKtH,OAAOuH,KAAK1O,OACpByO,EAAEE,WAAW,OACb3O,MAAMyO,GAAK,MAGnBjF,oBAIR,SAASoF,mBACL,IAAIC,EAAI9N,SAAS+N,KAAKC,MAAM,GAC5B,OAAOF,GAAQ,OAInB,SAASzN,aAGL,GAFAwJ,cAEI5K,MAAMU,QAAS,CAEfwD,SADW0K,oBAEXrN,aAAa,cAEb2C,SAAS,SAAQ,GACjB1C,aAAa,SAcrB,SAASwN,eACL,IAAIpD,EAAM5L,MAAMY,UAAUqO,IAAI,OAC1BC,EAAMlP,MAAMY,UAAUqO,IAAI,OAC1BC,IAAK5O,SAASC,eAAe,SAAS4O,KAAOD,GACjDlP,MAAMG,OAASyL,GAAY,2BAE3B5L,MAAM0B,iBAAkB,EAK5B,SAAS0N,OACLJ,eACA3F,iBACAjI,aAtBJN,OAAOuO,aAAe,SAASlG,GAC3BnJ,MAAMC,OAASwF,QAAQoD,IAAI,eAAgBM,GAC3C,IAAImG,EAAUnG,EAAMoG,OAAOtL,MAAM,KAAK,GAClCqL,GACApL,SAASoL,IAwBjBF"}