{"version":3,"file":"bundle.js","sources":["../../src/js/index.js"],"sourcesContent":["// M O D E L  ******************************************************************************************\n\nvar model = {\n    //---------------------------\n    // if debug == true logs go to console.\n    debug: false,\n    oauth2email: \"\",\n    oauth2name: \"\",\n    oauth2id: \"\",\n\n    //---------------------------\n    // url of GraphQL endpoint = appurl + '/graphql'\n    priv_origin: null, \n    set appurl(v){\n        this.priv_origin = v\n        document.getElementById('appUrl').innerHTML = '&#x21E2;&nbsp;'+v\n        buildSocialIcons(v+\"/oauthproviders\")\n        document.getElementById('graphqlTestLink').href = 'https://graphql-test.now.sh/?end_point='+v+'/schema&tab_name=auth-proxy'\n    },\n    get appurl(){\n        return this.priv_origin\n    },\n    //---------------------------\n    // templatesCache keeps loaded templates, not to load them repeatedly\n    templatesCache :[],\n\n    //---------------------------\n    get logined(){\n         return (this._loginedUser != null)\n    },\n \n\n    //---------------------------\n    urlParams: new URLSearchParams(window.location.search),\n    //---------------------------\n    _loginedUser: null,\n    set loginedUser(v) {\n        this._loginedUser = v\n        if (v) {\n            document.getElementById(\"userTab\").innerText = v.username\n            // getAuthRoles(model.loginedUser.username)\n        } else {\n            document.getElementById(\"userTab\").innerText = \"\"\n        }\n        refreshApp()\n    },\n    get loginedUser() {\n        return this._loginedUser\n    },\n\n    //---------------------------\n    _selfRegAllowed: false,\n    set selfRegAllowed(v) {\n        this._selfRegAllowed = v\n        if (v) {\n            showElements(\"#selfRegButton\")\n            showElements(\"#selfRegHelp\")\n        } else {\n            hideElements(\"#selfRegButton\")\n            hideElements(\"#selfRegHelp\")\n        }\n    },\n    get selfRegAllowed() {\n        return this._selfRegAllowed\n    },\n    \n    //---------------------------\n    _captchaRequired: false,\n    set captchaRequired(v) {\n        this._captchaRequired = v\n        if (v) {\n            showElements(\"#captcha\")\n        } else {\n            hideElements(\"#captcha\")\n        }\n    },\n    get captchaRequired() {\n        return this._captchaRequired\n    },\n\n    //---------------------------\n    _authRoles: null,\n    set authRoles(v) {\n        this._authRoles = v\n        if (this.isAdmin){\n            showElements('#usersTab')\n            showElements('#rolesTab')\n            showElements('#graphqlTest')\n            showElements('#btnNewApp')\n            showElements('#settingsButton')\n        } else {\n            hideElements('#usersTab')\n            hideElements('#rolesTab')\n            hideElements('#graphqlTest')\n            hideElements('#btnNewApp')\n            hideElements('#settingsButton')\n\n            // showPage('apps')\n        }\n        renderTemplateFile('mustache/apps.html', model, '.app-search-results')\n        \n    },\n    get authRoles() {\n        return this._authRoles\n    },\n    get isAdmin() {\n        if (!model.authRoles) return false\n        return model.authRoles.some(e => e.rolename == \"authadmin\")\n    },\n    \n    //---------------------------\n    _user: null,\n    set user(v) {\n        this._user = v\n        renderTemplateFile('mustache/user.html', model, '#userPage')\n    },\n    get user() {\n        return this._user\n    },\n    \n    //---------------------------\n    _app: null,\n    set app(v) {\n        this._app = v\n        renderTemplateFile('mustache/app.html', model, '#appPage')\n    },\n    get app() {\n        return this._app\n    },\n    \n    //---------------------------\n    _users: null,\n    set users(v) {\n        this._users = v\n        renderTemplateFile('mustache/users.html', model, '.user-search-results')\n    },\n    get users() {\n        return this._users\n    },\n    \n    //---------------------------\n    _apps: null,\n    set apps(v) {\n        this._apps = v\n        renderTemplateFile('mustache/apps.html', model, '.app-search-results')\n    },\n    get apps() {\n        return this._apps\n    },\n\n    //---------------------------\n    all_app_options: null,\n    all_user_options:null,\n    //---------------------------\n    _allApps: null,\n    set allApps(v) {\n        this._allApps = v\n        this.all_app_options = createOptions(v, \"appname\", \"description\", \"url\")\n        document.querySelector(\"#allAppsDataList\").innerHTML = this.all_app_options\n    },\n    get allApps() {\n        return this._allApps\n    },\n\n    //---------------------------\n    _allUsers: null,\n    set allUsers(v) {\n        this._allUsers = v\n        this.all_user_options = createOptions(v, \"username\", \"fullname\", \"email\")\n        document.querySelector(\"#allUsersDataList\").innerHTML = this.all_user_options\n    },\n    get allUsers() {\n        return this._allUsers\n    },\n    \n    //---------------------------\n    _app_user_roles: null,\n    set app_user_roles(v) {\n        this._app_user_roles = v\n        renderTemplateFile('mustache/roles.html', model, '.app-user-roles-results')\n    },\n    get app_user_roles() {\n        return this._app_user_roles\n    },\n\n    //---------------------------\n    _params: null,\n    set params(v) {\n        this._params = v\n        renderTemplateFile('mustache/params.html', model, '#paramsPage')\n    },\n    get params() {\n        return this._params\n    },\n\n    //---------------------------\n    _appstat: null,\n    set appstat(v) {\n        this._appstat = v\n        if (! document.getElementById('gauges')) return\n\n        document.getElementById('divSys').innerText = v.sys +' Mb'\n        document.getElementById('divAlloc').innerText = 'allocated: '+v.alloc +' Mb'\n        document.getElementById('divTotalAlloc').innerText = 'total allocated: '+v.total_alloc +' Mb'\n\n\n        drawGauge(\"req / day\", v.requests_per_day, 0,  \"divDay\")        // 10000\n        drawGauge(\"req / hour\", v.requests_per_hour, 0, \"divHour\")       // 1000\n        drawGauge(\"req / min\", v.requests_per_minute, 0, \"divMinute\")     // 100\n        drawGauge(\"req / sec\", v.requests_per_second, 0, \"divSecond\")      // 10\n    },\n    get appstat() {\n        return this._appstat\n    },\n\n \n    \n}\n\n\n\n// F U N C T I O N S  *********************************************************************************\n\nfunction createOptions(selectValues, keyProp, textProp1, textProp2) {\n    var output = []\n    selectValues && selectValues.forEach(function(value)\n    {\n      output.push(`<option value=\"${value[keyProp]}\">${value[textProp1]} &nbsp;&nbsp;&nbsp; ${value[textProp2]?value[textProp2]:''}</option>`);\n    })\n    let optionText = output.join('')\n    return optionText\n}\n\n\nfunction highlightTab(tabid) {\n        removeClass('.tab', \"underlined\")\n        var tabid0 = tabid.split(\"/\")[0]\n        addClass('#'+tabid0+'Tab', \"underlined\")   \n}\n\n\nfunction showPage(pageid, dontpush){\n    stopGettingAppstat()\n\n    //распарсить pageidExtended\n    var a = pageid.split(\"/\")\n    var pageid0 = a[0]\n    var id = a[1]\n\n    highlightTab(pageid)\n    \n    hideElements('.page')\n    showElements('#'+pageid0+'Page')\n\n\n    // setting focus\n    var text = document.querySelector('#'+pageid0+'Page input[type=\"text\"]')\n    if(text) \n        text.focus()\n\n\n    if (!dontpush){\n        if (!history.state || history.state.pageid != pageid ){\n            history.pushState({pageid:pageid},pageid, \"#\"+pageid) \n        }\n    }\n\n    if (id) {\n        if (pageid0 == \"app\"){\n            getApp(id)\n        } \n        if (pageid0 == \"user\"){\n            getUser(id)\n        }\n    }\n\n    if (pageid0 == 'params')\n        startGettingAppstat()\n\n    return false\n}\n\n\nfunction renderTemplateFile(templateFile, data, targetSelector) {\n    var cachedTemlpate = model.templatesCache[templateFile]\n    \n    if (cachedTemlpate) {\n        renderTemplate(cachedTemlpate) \n        // console.info(\"from cache:\",templateFile)\n        return\n    }\n    \n    fetch(templateFile).then(x => x.text()).then( t => {\n        model.templatesCache[templateFile]=t \n        renderTemplate(t)\n    })\n\n    function renderTemplate(template) {\n        var rendered = Mustache.render(template, data)\n        document.querySelector(targetSelector).innerHTML = rendered\n    }    \n\n}\n\n\n\nvar delayTimeout\nfunction delayFunc(f, delay=500) {\n   clearTimeout(delayTimeout) \n   delayTimeout = setTimeout(f, delay)  \n   return false \n}\n\n\nfunction searchApps() {\n    if (document.querySelector('#chkLocalSearch').checked) {\n        return delayFunc(searchAppsInModel, 100)\n    } else {\n        return delayFunc(formListAppSubmit)\n    }\n}\n\nfunction searchAppsInModel() {\n    if (!model.allApps) return\n    var text = document.querySelector(\"#formListApp input[name='search']\").value.trim().replace(' ','.*')\n    var r = new RegExp(text, 'i')\n    let found = model.allApps.filter((v)=>{\n        var s = Object.values(v).join(' ')\n        return r.test(s)\n    })\n    model.apps = found\n    return false   \n}\n\n\nfunction sortAppsBy(prop) {\n    if (!model._allApps) return false\n    model._allApps.sort( (a,b) => (a[prop]+a.appname)>(b[prop]+b.appname)? 1: -1)\n    model._apps.sort( (a,b) => (a[prop]+a.appname)>(b[prop]+b.appname)? 1: -1 )\n    model.apps = model._apps\n    return false\n}\n\n\nfunction searchUsers() {\n    if (document.querySelector('#chkLocalSearch').checked) {\n        return delayFunc(searchUsersInModel, 100)\n    } else {\n        return delayFunc(formListUserSubmit)\n    }\n}\n\n\nfunction searchUsersInModel() {\n    if (!model.allUsers) return\n    var text = document.querySelector(\"#formListUser input[name='search']\").value.trim().replace(' ','.*')\n    var r = new RegExp(text, 'i')\n    let found = model.allUsers.filter( (v) => r.test (Object.values(v).join(' ')) )\n    model.users = found\n    return false   \n}\n\n\nfunction sortUsersBy(prop) {\n    if (!model._allUsers) return false\n    model._allUsers.sort( (a,b) => (a[prop]+a.username)>(b[prop]+b.username)? 1: -1)\n    model._users.sort( (a,b) => (a[prop]+a.username)>(b[prop]+b.username)? 1: -1 )\n    model.users = model._users\n    return false\n}\n\n\n\n// R E Q U E S T S  *******************************************************\n\nfunction doGraphQLRequest(query, responseHandler, errorElementID) {\n    fetch(model.appurl+'/graphql', { \n        method: 'POST', \n        credentials: 'include', \n        body: JSON.stringify({ query: query, variables: {} }) \n    })\n        .then(res => { \n            if (res.ok) {\n                return res.json();\n            }\n            new Error(res)\n        })\n        .then((res) => {\n            model.debug && console.log(res)\n            if (res.errors){\n                model.debug && console.log(res.errors[0].message)\n                if (errorElementID) {\n                    document.getElementById(errorElementID).innerText = res.errors[0].message\n                }\n                return\n            }\n            responseHandler && responseHandler(res)\n        })\n        .catch( e => console.error(e) )    \n    \n}\n\n\n// L O G I N  *****************************************************************************\n\nfunction loginGraphQLFormSubmit(event) {\n    if (event) event.preventDefault()\n    \n    let username = document.getElementById(\"loginUsername\").value\n    let password = document.getElementById(\"loginPassword\").value\n    let captcha =  document.getElementById(\"loginCaptcha\").value\n    \n    \n\n    let query =`\n    query {\n        login(\n        username: \"${username}\",\n        password: \"${password}\",\n        captcha: \"${captcha}\"\n        )\n        }    \n    `\n    function onSuccess(res){\n        getLoginedUser()\n    }   \n\n    doGraphQLRequest(query, onSuccess, \"loginError\")\n    clearLoginForm()\n    return false       \n}\n\n\n\nfunction logoutGraphQLFormSubmit(event) {\n    if (event) event.preventDefault()\n    var query =`\n    query {\n        logout {\n            message\n            username\n          }\n        }\n    `\n\n    function onSuccess(res){\n        model.loginedUser = null\n        model.oauth2email =\"\"\n        model.oauth2id =\"\"\n        model.oauth2name =\"\"\n\n        refreshApp()\n    }\n\n    doGraphQLRequest(query, onSuccess)\n    return false       \n}\n\n\n\nfunction isSelfRegAllowed(event) {\n    if (event) event.preventDefault()\n    var query =` query { is_selfreg_allowed }`\n\n    function onSuccess(res){\n        model.selfRegAllowed = res.data.is_selfreg_allowed\n    }\n       \n    doGraphQLRequest(query, onSuccess)\n    return false       \n}\n\nfunction isCaptchaRequired(event) {\n    if (event) event.preventDefault()\n    let username = document.getElementById(\"loginUsername\").value   \n    var query =`  query { is_captcha_required(  username: \"${username}\" ) \n        {\n            is_required \n            path\n        } \n    } `\n\n    function onSuccess(res){\n        model.captchaRequired = res.data.is_captcha_required.is_required\n        if (model.captchaRequired) {\n            getNewCaptcha()\n            model.debug && console.log(\"Captcha IS required\")\n        }\n    }\n       \n    doGraphQLRequest(query, onSuccess)\n    return false       \n}\n\n\n\nfunction generateNewPassword(event) {\n    if (event) event.preventDefault()\n\n    let username = document.getElementById(\"loginUsername\").value\n\n    var query =`\n    mutation {\n        generate_password(\n        username: \"${username}\"\n        ) \n        }\n    `\n    function onSuccess(res){\n        alert(res.data.generate_password)\n        refreshApp()\n    }   \n\n    doGraphQLRequest(query, onSuccess)\n    return false       \n}\n\n\n\n// L O G I N E D   U S E R   **********************************************************************************************************************\n\n\nfunction getLoginedUser() {\n    model.loginedUser = null\n    var query =`\n    query {\n        get_logined_user {\n            description\n            email\n            fullname\n            username\n            disabled\n        }\n    }\n    `\n    \n    function onSuccess(res){\n        model.loginedUser = res.data.get_logined_user\n        getAuthRoles(model.loginedUser.username)\n        getUser(model.loginedUser.username)\n    } \n    \n    doGraphQLRequest(query, onSuccess)\n    return false       \n}\n\nfunction getAuthRoles(username) {\n    model.authRoles = null\n\n    var query =`\n    query {\n        list_app_user_role(\n            appname: \"auth\",\n            username: \"${username}\"\n            ) {\n                rolename\n            }\n        }\n        `\n\n    function onSuccess(res){\n        model.authRoles = res.data.list_app_user_role\n    } \n\n    doGraphQLRequest(query, onSuccess)\n    return false       \n}\n\n// P A R A M S  ***********************************************************************************************************************\n\n\nfunction getParams() {\n    model.params = null\n    var query =`\n    query {\n        get_params {\n            max_attempts\n            reset_time\n            selfreg\n            use_captcha\n          }\n        }\n    `\n\n    function onSuccess(res){\n        var p = res.data.get_params\n        model.params = p\n        getAppstatRest()\n    } \n\n    doGraphQLRequest(query, onSuccess)\n    return false       \n}\n\nfunction setParams(event) {\n    if (event) event.preventDefault()\n    let selfreg =       document.querySelector(\"#formParams input[name='selfreg']\").checked\n    let use_captcha =   document.querySelector(\"#formParams input[name='use_captcha']\").checked\n    let max_attempts =  document.querySelector(\"#formParams input[name='max_attempts']\").value\n    let reset_time =    document.querySelector(\"#formParams input[name='reset_time']\").value\n    \n    var query =`\n    query {\n        set_params(\n        selfreg:      ${selfreg},\n        use_captcha:  ${use_captcha},\n        max_attempts: ${max_attempts},\n        reset_time:   ${reset_time}\n        ) {\n            max_attempts\n            reset_time\n            selfreg\n            use_captcha\n          }\n        }\n    `\n\n    function onSuccess(res){\n        model.params = res.data.set_params\n        alert(\"params saving success\")\n    }\n\n    doGraphQLRequest(query, onSuccess, \"paramsError\")\n    return false       \n}\n\n\n// function getAppstat(event) {\n//     if (event) event.preventDefault()\n//     var query =`\n//     query {\n//         get_stat {\n//             alloc\n//             requests_per_day\n//             requests_per_hour\n//             requests_per_minute\n//             requests_per_second\n//             sys\n//             total_alloc\n//           }\n//         }\n//     `\n\n//     function onSuccess(res){\n//         var m = res.data.get_stat\n//         model.appstat = m\n//     } \n\n//     doGraphQLRequest(query, onSuccess, \"appstatError\")\n//     return false       \n// }\n\nfunction getAppstatRest(event) {\n    if (event) event.preventDefault()\n    getAppstatRest.counter = getAppstatRest.counter === undefined ? 0: getAppstatRest.counter+1\n    console.log(\"getAppstatRest.counter = \",getAppstatRest.counter)\n\n\n    fetch(model.appurl + \"/stat\").then(x => x.json())\n    .then( onSuccess )\n    .catch( err => {\n        console.log(\"fetch error:\",err)\n        return\n        }\n    )  \n\n    function onSuccess(res){\n        var m = res\n        model.appstat = m\n    } \n    return false       \n}\n\nmodel.statInterval = null\nfunction startGettingAppstat(){\n    clearInterval(model.statInterval)\n    getAppstatRest()\n    model.statInterval = setInterval(getAppstatRest, 3000)\n    console.log('startGettingAppstat')\n}\n\nfunction stopGettingAppstat(){\n    clearInterval(model.statInterval)\n    console.log('stopGettingAppstat')\n}\n\n// U S E R S  ***********************************************************************************************************************\n\n\nfunction formListUserSubmit(event) {\n    if (event) event.preventDefault()\n    model.users = null\n    let search = document.querySelector(\"#formListUser input[name='search']\").value\n    \n    var query =`\n    query {\n        list_user(\n        search: \"${search}\",\n        order: \"fullname ASC\"\n        ) {\n            length\n            list {\n              description\n              email\n              fullname\n              username\n              disabled\n            }\n          }\n        }        \n    `\n    \n    function onSuccess(res){\n        model.users = res.data.list_user.list\n    } \n\n    doGraphQLRequest(query, onSuccess)\n    return false       \n}\n\n\n\nfunction formUserSubmit(event, userOperationName = 'create_user') {\n    if (event) event.preventDefault()\n    let username =      document.querySelector(\"#formUser input[name='username']\").value\n    let password =      document.querySelector(\"#formUser input[name='password']\").value\n    let email    =      document.querySelector(\"#formUser input[name='email']\").value\n    let fullname =      document.querySelector(\"#formUser input[name='fullname']\").value\n    let description =   document.querySelector(\"#formUser *[name='description']\").value\n    let disabled =      document.querySelector(\"#formUser input[name='disabled']\").value\n    \n    var query =`\n    mutation {\n        ${userOperationName}(\n        username: \"${username}\",\n        password: \"${password}\",\n        email: \"${email}\",\n        fullname: \"${fullname}\",\n        description: \"${description}\",\n        disabled: ${disabled}\n        ) {\n            description\n            email\n            fullname\n            username\n            disabled\n          }\n\n        }\n    `\n\n    function onSuccess(res){\n        alert(userOperationName+\" success\")\n        refreshData()\n        model.user = res.data[userOperationName]\n        if (userOperationName == 'create_user' && !model.logined) {\n            alert(`\"${username}\" is created.` )\n            showPage('login',true)\n        }\n        getUser(username)\n    }\n\n    doGraphQLRequest(query, onSuccess, \"userError\")\n    return false       \n}\n\n\n\nfunction getUser(username) {\n    model.user = null\n    var query =`\n    query {\n        get_user(\n        username: \"${username}\"\n        ) {\n            description\n            email\n            fullname\n            username\n            disabled\n          }\n        \n        list_app_user_role(\n        username: \"${username}\"\n        ) {\n            app_description\n            appname\n            rolename\n            username\n          }\n        \n        }\n\n    `\n\n    function onSuccess(res){\n        var u = res.data.get_user\n        u.apps = groupApps(res.data.list_app_user_role)\n        // render \n        model.user = u\n    } \n\n    doGraphQLRequest(query, onSuccess)\n    return false       \n}\n\n\n\nfunction groupApps(list_app_user_role) {\n    if (!list_app_user_role) return []\n    \n    let gr = {}\n    for (let aur of list_app_user_role ){\n        if (!gr[aur.appname]) gr[aur.appname] =[]\n        gr[aur.appname].push(aur)\n    }\n\n    let arr = []\n\n    for (let [key, value] of Object.entries(gr)) {\n        let rec = {}\n        rec.appname =key\n        rec.app_description = value[0].app_description\n        rec.items = value\n        arr.push(rec)\n    }\n    return arr\n}\n\n\n\nfunction deleteUser(username) {\n    var query =`\n    mutation {\n        delete_user(\n        username: \"${username}\"\n        ) {\n            username\n          }\n        }\n    `\n    function onSuccess(res){\n        model.user = null\n        refreshData()\n        showPage('users')\n    } \n\n    doGraphQLRequest(query, onSuccess)\n    return false       \n}\n\n\n// A P P S  *******************************************************************\n\nfunction formListAppSubmit(event) {\n    if (event) event.preventDefault()\n    model.apps = null\n    let search = document.querySelector(\"#formListApp input[name='search']\").value\n    var query =`\n    query {\n        list_app(\n        search: \"${search}\",\n        order: \"description ASC\"\n        ) {\n            length\n            list {\n              appname\n              description\n              url\n              rebase\n              public\n            }\n          }\n        }    `\n\n    function onSuccess(res){\n        model.apps = res.data.list_app.list\n    } \n\n    doGraphQLRequest(query, onSuccess)\n    return false       \n}\n\n\n\nfunction formAppSubmit(event, appOperationName = 'create_app') {\n    if (event) event.preventDefault()\n    let appname =     document.querySelector(\"#formApp input[name='appname']\"    ).value\n    let url =         document.querySelector(\"#formApp input[name='url']\"        ).value\n    let description = document.querySelector(\"#formApp input[name='description']\").value\n    let rebase =      document.querySelector(\"#formApp input[name='rebase']\"     ).value\n    let _public =     document.querySelector(\"#formApp input[name='public']\"     ).value\n    \n    var query =`\n    mutation {\n        ${appOperationName}(\n        appname: \"${appname}\",\n        url: \"${url}\",\n        description: \"${description}\",\n        rebase: \"${rebase}\",\n        public: \"${_public}\"\n        ) {\n            description\n            appname\n            url\n            rebase\n            public\n          }\n\n        }\n    `\n    function onSuccess(res){\n        alert(appOperationName+\" success\")\n        refreshData()\n        model.app = res.data[appOperationName]\n\n        getApp(appname)\n    } \n\n    doGraphQLRequest(query, onSuccess, \"appError\")\n    return false       \n}\n\n\n\nfunction getApp(appname) {\n    model.app = null\n\n    var query =`\n    query {\n        get_app(\n        appname: \"${appname}\"\n        ) {\n            description\n            appname\n            url\n            rebase\n            public\n          }\n        \n        list_app_user_role(\n        appname: \"${appname}\"\n        ) {\n            appname\n            rolename\n            user_fullname\n            user_disabled\n            username\n          }\n        \n        }\n\n    `\n\n    function onSuccess(res){\n        var a = res.data.get_app\n        a.users = groupUsers(res.data.list_app_user_role)\n        // render\n        model.app = a\n    } \n\n    doGraphQLRequest(query, onSuccess)\n    return false       \n}\n\n\nfunction groupUsers(list_app_user_role) {\n    let gr = {}\n    for (let aur of list_app_user_role ){\n        if (!gr[aur.username]) gr[aur.username] =[]\n        gr[aur.username].push(aur)\n    }\n\n    let arr = []\n\n    for (let [key, value] of Object.entries(gr)) {\n        let rec = {}\n        rec.username =key\n        rec.user_fullname = value[0].user_fullname\n        rec.items = value\n        arr.push(rec)\n    }\n    return arr\n}\n\n\n\nfunction deleteApp(appname) {\n    var query =`\n    mutation {\n        delete_app(\n        appname: \"${appname}\"\n        ) {\n            appname\n          }\n        }\n    `\n    function onSuccess(res){\n        model.app = null\n        refreshData()\n        showPage('apps') ;\n    } \n\n    doGraphQLRequest(query, onSuccess)\n    return false       \n}\n\n\n\n\n// A P P   U S E R   R O L E   **************************************************************************************************\n\nfunction getAllApps(event) {\n    if (event) event.preventDefault()\n    model.allApps = null\n    var query =`\n    query {\n        list_app(\n        order: \"appname ASC\"\n        ) {\n            length\n            list {\n              appname\n              description\n              url\n              rebase\n              public \n            }\n          }\n        }    `\n\n    function onSuccess(res){\n        model.allApps = res.data.list_app.list\n    } \n\n    doGraphQLRequest(query, onSuccess)\n    return false       \n}\n\n\nfunction getAllUsers(event) {\n    if (event) event.preventDefault()\n    model.allUsers = null\n    var query =`\n    query {\n        list_user(\n        order: \"fullname ASC\"\n        ) {\n            length\n            list {\n              username\n              fullname\n              email\n              description\n              disabled\n            }\n          }\n        }    `\n\n    function onSuccess(res){\n        model.allUsers = res.data.list_user.list\n    } \n\n    doGraphQLRequest(query, onSuccess)\n    return false       \n}\n\nfunction formListRoleSubmit(event) {\n    if (event && event.preventDefault ) event.preventDefault()\n    model.app_user_roles = null\n    let appname =  document.getElementById(\"allApps\").value\n    let username = document.getElementById(\"allUsers\").value\n    if (!appname || !username) \n        return\n\n    var query =`\n    query {\n        list_app_user_role(\n        appname: \"${appname}\",\n        username: \"${username}\"\n        ) {\n            rolename\n          }\n        }        \n        `\n\n    function onSuccess(res){\n        model.app_user_roles = res.data.list_app_user_role\n    } \n\n    doGraphQLRequest(query, onSuccess)\n    return false       \n}\n\n\nfunction modifyRole(action,appname,username,rolename, onsuccess ) {\n    if (!appname || !username || !rolename) return\n\n    var query =`\n    mutation {\n        ${action}_app_user_role(\n        appname: \"${appname}\",\n        username: \"${username}\",\n        rolename: \"${rolename}\"\n        ) {\n            rolename\n            appname\n            username\n          }\n        }\n    `\n    function onSuccess(res){\n        if (onsuccess) onsuccess()\n    }\n\n    doGraphQLRequest(query, onSuccess)\n    return false       \n}\n\n// works when input values on roles page change\nfunction refreshRoles() {\n    let allUsersValue = document.getElementById(\"allUsers\").value\n    if (allUsersValue) {\n        let ui = document.querySelector(`#allUsersDataList>option[value='${allUsersValue}']`).innerText\n        document.getElementById('userInfo').innerText = ui   \n    }\n\n    let allAppsValue = document.getElementById(\"allApps\").value\n    if (allAppsValue) {\n        let ai = document.querySelector(`#allAppsDataList>option[value='${allAppsValue}']`).innerText\n        document.getElementById('appInfo').innerText = ai\n    }\n\n    if (allUsersValue && allAppsValue) \n        formListRoleSubmit() \n}\n\n\nfunction filterRows(selector, value ){\n    var v = value.toLowerCase()\n    var rows = document.querySelectorAll(selector)\n    rows.forEach(e => {\n        var txt = e.innerText.toLowerCase()\n        if (txt.indexOf(v) == -1) {\n            e.classList.add(\"hidden\")\n        } else {\n            e.classList.remove(\"hidden\")\n        }\n    });\n}\n\nfunction hideElements(selector) {\n    document.querySelectorAll(selector).forEach(e => e.classList.add(\"hidden\"));\n}\n\n\nfunction showElements(selector) {\n    document.querySelectorAll(selector).forEach(e => e.classList.remove(\"hidden\"));\n}\n\nfunction addClass(selector, classname) {\n        document.querySelectorAll(selector).forEach(e => e.classList.add(classname));\n}\n\nfunction removeClass(selector, classname) {\n    document.querySelectorAll(selector).forEach(e => e.classList.remove(classname));\n}\n\n\nfunction hidePassword() {\n    document.querySelector(\"#formUser input[name='password']\").setAttribute('type','password')\n}\n\nfunction showPassword() {\n    document.querySelector(\"#formUser input[name='password']\").setAttribute('type','text')\n}\n\nfunction removeQueryStringFromBrowserURL() {\n    let url = document.location.href\n    let url1 = url.replace(/\\?.*/, '')\n    let url2 = url1+\"?url=\"+model.appurl\n    history.replaceState(null,null,url2)   \n}\n\n\nfunction generatePassword() {\n    function newPassword (n) {\n        let pickSymbol =(s) => s[Math.floor(Math.random()*s.length)]\n        var symbolSets =[\"bcdfghjklmnpqrstvwxz\",\"aeiou\"] \n        var password = ''\n        for (let i=0; i<n; i++){\n            password += pickSymbol(symbolSets[i%symbolSets.length])\n        }\n        return password\n    }\n\n    document.querySelector(\"#formUser input[name='password']\").value = newPassword(9)\n}\n\nfunction buildSocialIcons(url) {\n        fetch(url).then(x => x.json())\n        .then( t => renderOauthProvidersJSON(t) )\n        .catch( err => {\n            console.log(\"fetch error:\",err)\n            return\n            }\n        )  \n}\n\nfunction renderOauthProvidersJSON(jsn) {\n    let el = document.getElementById('socialIcons')\n    \n    if (!el) return\n    \n    el.innerHTML = ''\n    let icons = []\n    for (let [k,v] of Object.entries(jsn) ) {\n        icons.push(`\n        <div class=\"social-element\">\n        <a class=\"button button-clear\" title=\"login via ${k}\" href=\"${model.appurl + v[0]}\">\n        ${k}\n        <br>\n        <img class=\"social-icon\" src=\"images/${k}.svg\">\n        </a>\n        <!--\n        <br>\n        <a class=\"social-logout\" title=\"logout from ${k}\" href=\"${model.appurl + v[1]}\">logout</a>\n        -->\n        </div>\n        \n        \n        `)\n    }\n    \n    \n    if (icons.length > 0){\n        el.innerHTML = '<div class=\"socialHeader\">войти через</div>' + icons.join(' ')\n        showElements(\"#selfRegHelpText\")\n        removeClass('#socialIcons', 'transparent')\n    } else {\n        hideElements(\"#selfRegHelpText\")\n    }\n}\n\n\n\nfunction getNewCaptcha() {\n    let uri = model.appurl+\"/captcha?\"+ new Date().getTime()\n    document.getElementById(\"captchaImg\").src = uri\n    return false\n}\n\n\n// G O O G L E   C H A R T S  ***************************************************************\n\nvar gauges = {}\n\nfunction drawGauge(title, val, maxV, containerID) {\n\n    if (!google) return\n    var container = document.getElementById(containerID)\n    if (! container) return\n\n    if (! gauges[title]) {\n        gauges[title]={}\n        gauges[title].data = google.visualization.arrayToDataTable([['Label', 'Value'], [title, 0]])\n    }\n    if (container.innerHTML == \"\"){\n        gauges[container]=container\n        gauges[title].chart = new google.visualization.Gauge(container)\n        console.log(\"Redraw gauge container:\", containerID)\n    }\n\n    // set values\n    gauges[title].data.setValue(0, 1, val)\n\n    let maxVal = maxV ? maxV: getUpperLimit(val)\n    var options = {\n        // width: 120,\n        height:  120, \n        animation:{\n            duration: 700\n        },\n        greenFrom:0, greenTo: maxVal*0.2,\n        yellowFrom: maxVal*0.8, yellowTo: maxVal*0.9,\n        redFrom: maxVal*0.9, redTo: maxVal,\n        minorTicks: 5,\n        // redColor: '#E10098',\n        // greenColor: 'cyan',\n        max: maxVal\n    }\n\n    // draw the chart\n    gauges[title].chart.draw(gauges[title].data, options)\n}\n\n\nfunction getUpperLimit(n) {\n    var lim = 10\n    while (n > lim) lim *= 10\n    return lim\n}\n\n// **********************************************************************************************\n// **********************************************************************************************\n// **********************************************************************************************\n\n\nfunction clearLoginForm() {\n    document.getElementById(\"loginUsername\").value = \"\"\n    document.getElementById(\"loginPassword\").value = \"\"\n    document.getElementById(\"loginCaptcha\").value = \"\"\n    document.getElementById(\"loginError\").innerText = \"\"\n    document.getElementById(\"socialLoginError\").innerHTML = \"\"\n    document.getElementById(\"oauth2email\").innerHTML = \"\"\n}\n\n\nfunction logout() {\n    logoutGraphQLFormSubmit()\n    clearLoginForm()\n    showPage('login',true)\n    isSelfRegAllowed()\n    model.captchaRequired = false\n    return false\n}\n\n\n// refreshData() если пользователь залогинен наполняет модель данными,\n// в противном случае или обнуляет модель.\nfunction refreshData() {\n    if (model.logined) {\n        getAllApps()\n        getAllUsers()\n        formListAppSubmit()\n        formListUserSubmit()  \n    } else {\n        // nullify model's inner props\n        for (const k of Object.keys(model)) {\n            if (k.startsWith('_')) {\n                model[k] = null\n            }\n        }\n        isSelfRegAllowed()\n   }    \n}\n\nfunction getCurrentPageID(){\n    var p = location.hash.slice(1)\n    return (!p || p.includes('=')) ? 'apps' : p\n}\n\n// refreshApp обновляет данные модели и GUI\nfunction refreshApp() {\n    refreshData()\n    \n    if (model.logined) {\n        let page = getCurrentPageID()\n        showPage(page) \n        showElements('#menu')     \n        hideElements('#menuUnlogined')     \n    } else {\n        showPage('login',true)\n        hideElements('#menu')\n        showElements('#menuUnlogined')\n    }  \n}\n\n\n\nwindow.onhashchange = function(event) {\n    model.debug && console.log(\"onhashchange\", event)\n    var newpage = event.newURL.split('#')[1]\n    if (newpage) \n        showPage(newpage)\n}\n\n\nfunction setAppParams(){\n    model.oauth2email = model.urlParams.get('oauth2email') || ''\n    model.oauth2name = model.urlParams.get('oauth2name') || ''\n    model.oauth2id = model.oauth2email.replace(/@.*/,'')\n    document.getElementById('oauth2email').innerHTML = model.oauth2email\n\n    var url = model.urlParams.get('url')\n    var css = model.urlParams.get('css')\n    var oauth2error = model.urlParams.get('oauth2error')\n    var alrt = model.urlParams.get('alert')\n    if (alrt) alert(alrt)\n    document.getElementById('socialLoginError').innerHTML = oauth2error\n    if (css) document.getElementById('theme').href = css\n    model.appurl = url ? url : 'https://auth-proxy.rg.ru'\n    removeQueryStringFromBrowserURL()\n    //?\n    model.captchaRequired = false\n}\n\n\n\nfunction init() {\n    renderTemplateFile('mustache/params.html', model, '#paramsPage')\n    google.charts.load('current', {'packages':['gauge']})\n    google.charts.setOnLoadCallback(getAppstatRest)\n    \n    setAppParams()\n    getLoginedUser()\n    refreshApp()      \n}\n\n\n// O N   P A G E   L O A D  ****************************************************************************************\n\ninit()\n"],"names":["delayTimeout","model","debug","oauth2email","oauth2name","oauth2id","priv_origin","appurl","v","this","document","getElementById","innerHTML","buildSocialIcons","href","templatesCache","logined","_loginedUser","urlParams","URLSearchParams","window","location","search","loginedUser","innerText","username","refreshApp","_selfRegAllowed","selfRegAllowed","showElements","hideElements","_captchaRequired","captchaRequired","_authRoles","authRoles","isAdmin","renderTemplateFile","some","e","rolename","_user","user","_app","app","_users","users","_apps","apps","all_app_options","all_user_options","_allApps","allApps","createOptions","querySelector","_allUsers","allUsers","_app_user_roles","app_user_roles","_params","params","_appstat","appstat","sys","alloc","total_alloc","drawGauge","requests_per_day","requests_per_hour","requests_per_minute","requests_per_second","selectValues","keyProp","textProp1","textProp2","output","forEach","value","push","join","highlightTab","tabid","removeClass","addClass","split","showPage","pageid","dontpush","stopGettingAppstat","a","pageid0","id","text","focus","history","state","pushState","getApp","getUser","startGettingAppstat","templateFile","data","targetSelector","cachedTemlpate","renderTemplate","template","rendered","Mustache","render","fetch","then","x","t","delayFunc","f","delay","clearTimeout","setTimeout","searchApps","checked","searchAppsInModel","formListAppSubmit","trim","replace","r","RegExp","found","filter","s","Object","values","test","sortAppsBy","prop","sort","b","appname","searchUsers","searchUsersInModel","formListUserSubmit","sortUsersBy","doGraphQLRequest","query","responseHandler","errorElementID","method","credentials","body","JSON","stringify","variables","res","ok","json","Error","console","log","errors","message","catch","error","loginGraphQLFormSubmit","event","preventDefault","getLoginedUser","clearLoginForm","logoutGraphQLFormSubmit","isSelfRegAllowed","is_selfreg_allowed","isCaptchaRequired","is_captcha_required","is_required","getNewCaptcha","generateNewPassword","alert","generate_password","get_logined_user","getAuthRoles","list_app_user_role","getParams","p","get_params","getAppstatRest","setParams","set_params","counter","undefined","m","err","clearInterval","statInterval","setInterval","list_user","list","formUserSubmit","userOperationName","password","email","fullname","description","disabled","refreshData","u","get_user","groupApps","gr","aur","arr","key","entries","rec","app_description","items","deleteUser","list_app","formAppSubmit","appOperationName","url","rebase","_public","get_app","groupUsers","user_fullname","deleteApp","getAllApps","getAllUsers","formListRoleSubmit","modifyRole","action","onsuccess","refreshRoles","allUsersValue","ui","allAppsValue","ai","filterRows","selector","toLowerCase","querySelectorAll","indexOf","classList","add","remove","classname","hidePassword","setAttribute","showPassword","removeQueryStringFromBrowserURL","url2","replaceState","generatePassword","n","pickSymbol","Math","floor","random","length","symbolSets","i","newPassword","renderOauthProvidersJSON","jsn","el","icons","k","uri","Date","getTime","src","gauges","title","val","maxV","containerID","google","container","visualization","arrayToDataTable","chart","Gauge","setValue","maxVal","getUpperLimit","options","height","animation","duration","greenFrom","greenTo","yellowFrom","yellowTo","redFrom","redTo","minorTicks","max","draw","lim","logout","keys","startsWith","getCurrentPageID","hash","slice","includes","setAppParams","get","css","oauth2error","alrt","init","charts","load","packages","setOnLoadCallback","onhashchange","newpage","newURL"],"mappings":"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"}