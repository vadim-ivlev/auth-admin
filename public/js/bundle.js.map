{"version":3,"file":"bundle.js","sources":["../../src/js/index.js"],"sourcesContent":["// M O D E L  ******************************************************************************************\n\nvar model = {\n    //---------------------------\n    // if debug == true logs go to console.\n    debug: true,\n    oauth2email: \"\",\n    oauth2name: \"\",\n    oauth2id: \"\",\n\n    //---------------------------\n    // url where we access GraphQL endpoint = origin + '/graphql'\n    priv_origin: null, \n    set origin(v){\n        this.priv_origin = v\n        document.getElementById('appUrl').innerHTML = '&#x21E2;&nbsp;'+v\n        buildSocialIcons(v+\"/oauthproviders\")\n        document.getElementById('graphqlTestLink').href = 'https://graphql-test.now.sh/?end_point='+v+'/schema&tab_name=auth-proxy'\n    },\n    get origin(){\n        return this.priv_origin\n    },\n    //---------------------------\n    // templatesCache keeps loaded templates, not to load them repeatedly\n    templatesCache :[],\n\n    //---------------------------\n    get logined(){\n         return (this._loginedUser != null)\n    },\n \n\n    //---------------------------\n    urlParams: new URLSearchParams(window.location.search),\n    // set urlParams(v) {\n    // },\n    // get urlParams() {\n    //     return this._urlParams\n    // },\n\n    //---------------------------\n    _loginedUser: null,\n    set loginedUser(v) {\n        this._loginedUser = v\n        if (v) {\n            document.getElementById(\"userTab\").innerText = v.username\n            // getAuthRoles(model.loginedUser.username)\n        } else {\n            document.getElementById(\"userTab\").innerText = \"\"\n        }\n        refreshApp()\n    },\n    get loginedUser() {\n        return this._loginedUser\n    },\n\n    //---------------------------\n    _selfRegAllowed: false,\n    set selfRegAllowed(v) {\n        this._selfRegAllowed = v\n        if (v) {\n            showElements(\"#selfRegButton\")\n            showElements(\"#selfRegHelp\")\n        } else {\n            hideElements(\"#selfRegButton\")\n            hideElements(\"#selfRegHelp\")\n        }\n    },\n    get selfRegAllowed() {\n        return this._selfRegAllowed\n    },\n    \n    //---------------------------\n    _captchaRequired: false,\n    set captchaRequired(v) {\n        this._captchaRequired = v\n        if (v) {\n            showElements(\"#captcha\")\n        } else {\n            hideElements(\"#captcha\")\n        }\n    },\n    get captchaRequired() {\n        return this._captchaRequired\n    },\n\n    //---------------------------\n    _authRoles: null,\n    set authRoles(v) {\n        this._authRoles = v\n        if (this.isAdmin){\n            showElements('#usersTab')\n            showElements('#rolesTab')\n            showElements('#graphqlTest')\n            showElements('#btnNewApp')\n            showElements('#settingsButton')\n        } else {\n            hideElements('#usersTab')\n            hideElements('#rolesTab')\n            hideElements('#graphqlTest')\n            hideElements('#btnNewApp')\n            hideElements('#settingsButton')\n\n            // showPage('apps')\n        }\n        renderPage('apps','.app-search-results')\n        \n    },\n    get authRoles() {\n        return this._authRoles\n    },\n    get isAdmin() {\n        if (!model.authRoles) return false\n        return model.authRoles.some(e => e.rolename == \"authadmin\")\n    },\n    \n    //---------------------------\n    _user: null,\n    set user(v) {\n        this._user = v\n        renderPage('user','#userPage')\n    },\n    get user() {\n        return this._user\n    },\n    \n    //---------------------------\n    _app: null,\n    set app(v) {\n        this._app = v\n        renderPage('app','#appPage')\n    },\n    get app() {\n        return this._app\n    },\n    \n    //---------------------------\n    _users: null,\n    set users(v) {\n        this._users = v\n        renderPage('users','.user-search-results')\n    },\n    get users() {\n        return this._users\n    },\n    \n    //---------------------------\n    _apps: null,\n    set apps(v) {\n        this._apps = v\n        renderPage('apps','.app-search-results')\n    },\n    get apps() {\n        return this._apps\n    },\n\n    //---------------------------\n    all_app_options: null,\n    all_user_options:null,\n    //---------------------------\n    _allApps: null,\n    set allApps(v) {\n        this._allApps = v\n        this.all_app_options = createOptions(v, \"appname\", \"description\", \"url\")\n        document.querySelector(\"#allAppsDataList\").innerHTML = this.all_app_options\n    },\n    get allApps() {\n        return this._allApps\n    },\n\n    //---------------------------\n    _allUsers: null,\n    set allUsers(v) {\n        this._allUsers = v\n        this.all_user_options = createOptions(v, \"username\", \"fullname\", \"email\")\n        document.querySelector(\"#allUsersDataList\").innerHTML = this.all_user_options\n    },\n    get allUsers() {\n        return this._allUsers\n    },\n    \n    //---------------------------\n    _app_user_roles: null,\n    set app_user_roles(v) {\n        this._app_user_roles = v\n        renderPage('roles','.app-user-roles-results')\n    },\n    get app_user_roles() {\n        return this._app_user_roles\n    },\n\n    //---------------------------\n    _params: null,\n    set params(v) {\n        this._params = v\n        renderPage('params','#paramsPage')\n    },\n    get params() {\n        return this._params\n    },\n\n    //---------------------------\n    _memstat: null,\n    set memstat(v) {\n        this._memstat = v\n        if (document.getElementById('preMemstat'))\n        document.getElementById('preMemstat').innerText = JSON.stringify(v)\n    },\n    get memstat() {\n        return this._memstat\n    },\n\n\n    \n}\n\n\n\n// F U N C T I O N S  *********************************************************************************\n\nfunction createOptions(selectValues, keyProp, textProp1, textProp2) {\n    var output = []\n    selectValues && selectValues.forEach(function(value)\n    {\n      output.push(`<option value=\"${value[keyProp]}\">${value[textProp1]} &nbsp;&nbsp;&nbsp; ${value[textProp2]?value[textProp2]:''}</option>`);\n    })\n    let optionText = output.join('')\n    return optionText\n}\n\n\nfunction highlightTab(tabid) {\n        removeClass('.tab', \"underlined\")\n        var tabid0 = tabid.split(\"/\")[0]\n        addClass('#'+tabid0+'Tab', \"underlined\")   \n}\n\n\nfunction showPage(pageid, dontpush){\n    //распарсить pageidExtended\n    var a = pageid.split(\"/\")\n    var pageid0 = a[0]\n    var id = a[1]\n\n    highlightTab(pageid)\n    \n    hideElements('.page')\n    showElements('#'+pageid0+'Page')\n\n\n    // setting focus\n    var text = document.querySelector('#'+pageid0+'Page input[type=\"text\"]')\n    if(text) \n        text.focus()\n\n\n    if (!dontpush){\n        if (!history.state || history.state.pageid != pageid ){\n            history.pushState({pageid:pageid},pageid, \"#\"+pageid) \n        }\n    }\n\n    if (id) {\n        if (pageid0 == \"app\"){\n            getApp(id)\n        } \n        if (pageid0 == \"user\"){\n            getUser(id)\n        }\n    }\n\n\n    return false\n}\n\n\nfunction renderTemplateFile(templateFile, data, targetSelector) {\n\n    function renderTemplate(template) {\n        var rendered = Mustache.render(template, data)\n        document.querySelector(targetSelector).innerHTML = rendered\n    }    \n\n    var cachedTemlpate = model.templatesCache[templateFile]\n    \n    if (cachedTemlpate) {\n        renderTemplate(cachedTemlpate) \n        console.info(\"from cache:\",templateFile)\n        return\n    }\n    \n    // $.get(templateFile, onSuccess);\n    fetch(templateFile).then(x => x.text()).then( t => {\n        model.templatesCache[templateFile]=t \n        renderTemplate(t)\n    })\n}\n\n\nfunction renderPage(pageid, elemSelector) {\n    renderTemplateFile('mustache/'+pageid+'.html', model, elemSelector)\n}\n\n\nfunction alertOnError(e, msg){\n    alert(msg, e)\n}\n\n\n// function getCookie(cname) {\n//     var name = cname + \"=\";\n//     var decodedCookie = decodeURIComponent(document.cookie);\n//     var ca = decodedCookie.split(';');\n//     for(var i = 0; i <ca.length; i++) {\n//       var c = ca[i];\n//       while (c.charAt(0) == ' ') {\n//         c = c.substring(1);\n//       }\n//       if (c.indexOf(name) == 0) {\n//         return c.substring(name.length, c.length);\n//       }\n//     }\n//     return \"\";\n// }\n\n\nvar delayTimeout\nfunction delayFunc(f, delay=500) {\n   clearTimeout(delayTimeout) \n   delayTimeout = setTimeout(f, delay)  \n   return false \n}\n\n\nfunction searchApps() {\n    if (document.querySelector('#chkLocalSearch').checked) {\n        return delayFunc(searchAppsInModel, 100)\n    } else {\n        return delayFunc(formListAppSubmit)\n    }\n}\n\nfunction searchAppsInModel() {\n    if (!model.allApps) return\n    var text = document.querySelector(\"#formListApp input[name='search']\").value.trim().replace(' ','.*')\n    var r = new RegExp(text, 'i')\n    let found = model.allApps.filter((v)=>{\n        var s = Object.values(v).join(' ')\n        return r.test(s)\n    })\n    model.apps = found\n    return false   \n}\n\n\nfunction sortAppsBy(prop) {\n    if (!model._allApps) return false\n    model._allApps.sort( (a,b) => (a[prop]+a.appname)>(b[prop]+b.appname)? 1: -1)\n    model._apps.sort( (a,b) => (a[prop]+a.appname)>(b[prop]+b.appname)? 1: -1 )\n    model.apps = model._apps\n    return false\n}\n\n\nfunction searchUsers() {\n    if (document.querySelector('#chkLocalSearch').checked) {\n        return delayFunc(searchUsersInModel, 100)\n    } else {\n        return delayFunc(formListUserSubmit)\n    }\n}\n\n\nfunction searchUsersInModel() {\n    if (!model.allUsers) return\n    var text = document.querySelector(\"#formListUser input[name='search']\").value.trim().replace(' ','.*')\n    var r = new RegExp(text, 'i')\n    let found = model.allUsers.filter( (v) => r.test (Object.values(v).join(' ')) )\n    model.users = found\n    return false   \n}\n\n\nfunction sortUsersBy(prop) {\n    if (!model._allUsers) return false\n    model._allUsers.sort( (a,b) => (a[prop]+a.username)>(b[prop]+b.username)? 1: -1)\n    model._users.sort( (a,b) => (a[prop]+a.username)>(b[prop]+b.username)? 1: -1 )\n    model.users = model._users\n    return false\n}\n\n\n\n// R E Q U E S T S  *******************************************************\n\nfunction doGraphQLRequest(query, responseHandler, errorElementID) {\n    // $.ajax({ url: \"/graphql\", type: \"POST\", data: { query: query }, error: alertOnError, \n    //     success: (res) => {\n    //         model.debug && console.log(res)\n    //         if (res.errors){\n    //             model.debug && console.log(res.errors[0].message)\n    //             if (errorElementID) {\n    //                 document.getElementById(errorElementID).innerText = res.errors[0].message\n    //             }\n    //             return\n    //         }\n    //         responseHandler(res)\n    //     } \n    // })\n    fetch(model.origin+'/graphql', { \n        method: 'POST', \n        credentials: 'include', \n        body: JSON.stringify({ query: query, variables: {} }) \n    })\n        .then(res => { \n            if (res.ok) {\n                return res.json();\n            }\n            new Error(res)\n        })\n        .then((res) => {\n            model.debug && console.log(res)\n            if (res.errors){\n                model.debug && console.log(res.errors[0].message)\n                if (errorElementID) {\n                    document.getElementById(errorElementID).innerText = res.errors[0].message\n                }\n                return\n            }\n            responseHandler && responseHandler(res)\n        })\n        .catch( e => console.error(e) )    \n    \n}\n\n\n// L O G I N  *****************************************************************************\n\nfunction loginGraphQLFormSubmit(event) {\n    if (event) event.preventDefault()\n    \n    let username = document.getElementById(\"loginUsername\").value\n    let password = document.getElementById(\"loginPassword\").value\n    let captcha =  document.getElementById(\"loginCaptcha\").value\n    \n    \n\n    let query =`\n    query {\n        login(\n        username: \"${username}\",\n        password: \"${password}\",\n        captcha: \"${captcha}\"\n        )\n        }    \n    `\n    function onSuccess(res){\n        getLoginedUser()\n    }   \n\n    doGraphQLRequest(query, onSuccess, \"loginError\")\n    clearLoginForm()\n    return false       \n}\n\n\n\nfunction logoutGraphQLFormSubmit(event) {\n    if (event) event.preventDefault()\n    var query =`\n    query {\n        logout {\n            message\n            username\n          }\n        }\n    `\n\n    function onSuccess(res){\n        model.loginedUser = null\n        model.oauth2email =\"\"\n        model.oauth2id =\"\"\n        model.oauth2name =\"\"\n\n        refreshApp()\n    }\n\n    doGraphQLRequest(query, onSuccess)\n    return false       \n}\n\n\n\nfunction isSelfRegAllowed(event) {\n    if (event) event.preventDefault()\n    var query =` query { is_selfreg_allowed }`\n\n    function onSuccess(res){\n        model.selfRegAllowed = res.data.is_selfreg_allowed\n    }\n       \n    doGraphQLRequest(query, onSuccess)\n    return false       \n}\n\nfunction isCaptchaRequired(event) {\n    if (event) event.preventDefault()\n    let username = document.getElementById(\"loginUsername\").value   \n    var query =`  query { is_captcha_required(  username: \"${username}\" ) \n        {\n            is_required \n            path\n        } \n    } `\n\n    function onSuccess(res){\n        model.captchaRequired = res.data.is_captcha_required.is_required\n        if (model.captchaRequired) {\n            getNewCaptcha()\n            model.debug && console.log(\"Captcha IS required\")\n        }\n    }\n       \n    doGraphQLRequest(query, onSuccess)\n    return false       \n}\n\n\n\nfunction generateNewPassword(event) {\n    if (event) event.preventDefault()\n\n    let username = document.getElementById(\"loginUsername\").value\n\n    var query =`\n    mutation {\n        generate_password(\n        username: \"${username}\"\n        ) \n        }\n    `\n    function onSuccess(res){\n        alert(res.data.generate_password)\n        refreshApp()\n    }   \n\n    doGraphQLRequest(query, onSuccess)\n    return false       \n}\n\n\n\n// L O G I N E D   U S E R   **********************************************************************************************************************\n\n\nfunction getLoginedUser() {\n    model.loginedUser = null\n    var query =`\n    query {\n        get_logined_user {\n            description\n            email\n            fullname\n            username\n            disabled\n        }\n    }\n    `\n    \n    function onSuccess(res){\n        model.loginedUser = res.data.get_logined_user\n        getAuthRoles(model.loginedUser.username)\n        getUser(model.loginedUser.username)\n    } \n    \n    doGraphQLRequest(query, onSuccess)\n    return false       \n}\n\nfunction getAuthRoles(username) {\n    model.authRoles = null\n\n    var query =`\n    query {\n        list_app_user_role(\n            appname: \"auth\",\n            username: \"${username}\"\n            ) {\n                rolename\n            }\n        }\n        `\n\n    function onSuccess(res){\n        model.authRoles = res.data.list_app_user_role\n    } \n\n    doGraphQLRequest(query, onSuccess)\n    return false       \n}\n\n// P A R A M S  ***********************************************************************************************************************\n\n\nfunction getParams() {\n    model.params = null\n    var query =`\n    query {\n        get_params {\n            max_attempts\n            reset_time\n            selfreg\n            use_captcha\n          }\n        }\n    `\n\n    function onSuccess(res){\n        var p = res.data.get_params\n        model.params = p\n    } \n\n    doGraphQLRequest(query, onSuccess)\n    return false       \n}\n\nfunction setParams(event) {\n    if (event) event.preventDefault()\n    let selfreg =       document.querySelector(\"#formParams input[name='selfreg']\").checked\n    let use_captcha =   document.querySelector(\"#formParams input[name='use_captcha']\").checked\n    let max_attempts =  document.querySelector(\"#formParams input[name='max_attempts']\").value\n    let reset_time =    document.querySelector(\"#formParams input[name='reset_time']\").value\n    \n    var query =`\n    query {\n        set_params(\n        selfreg:      ${selfreg},\n        use_captcha:  ${use_captcha},\n        max_attempts: ${max_attempts},\n        reset_time:   ${reset_time}\n        ) {\n            max_attempts\n            reset_time\n            selfreg\n            use_captcha\n          }\n        }\n    `\n\n    function onSuccess(res){\n        model.params = res.data.set_params\n        alert(\"params saving success\")\n    }\n\n    doGraphQLRequest(query, onSuccess, \"paramsError\")\n    return false       \n}\n\n\nfunction getMemstat(event) {\n    if (event) event.preventDefault()\n    model.memstat = null\n    var query =`\n    query {\n        memstat {\n            alloc\n            sys\n            total_alloc\n          }\n        }\n    `\n\n    function onSuccess(res){\n        var m = res.data.memstat\n        model.memstat = m\n    } \n\n    doGraphQLRequest(query, onSuccess, \"memstatError\")\n    return false       \n}\n\n\n\n// U S E R S  ***********************************************************************************************************************\n\n\nfunction formListUserSubmit(event) {\n    if (event) event.preventDefault()\n    model.users = null\n    let search = document.querySelector(\"#formListUser input[name='search']\").value\n    \n    var query =`\n    query {\n        list_user(\n        search: \"${search}\",\n        order: \"fullname ASC\"\n        ) {\n            length\n            list {\n              description\n              email\n              fullname\n              username\n              disabled\n            }\n          }\n        }        \n    `\n    \n    function onSuccess(res){\n        model.users = res.data.list_user.list\n    } \n\n    doGraphQLRequest(query, onSuccess)\n    return false       \n}\n\n\n\nfunction formUserSubmit(event, userOperationName = 'create_user') {\n    if (event) event.preventDefault()\n    let username =      document.querySelector(\"#formUser input[name='username']\").value\n    let password =      document.querySelector(\"#formUser input[name='password']\").value\n    let email    =      document.querySelector(\"#formUser input[name='email']\").value\n    let fullname =      document.querySelector(\"#formUser input[name='fullname']\").value\n    let description =   document.querySelector(\"#formUser *[name='description']\").value\n    let disabled =      document.querySelector(\"#formUser input[name='disabled']\").value\n    \n    var query =`\n    mutation {\n        ${userOperationName}(\n        username: \"${username}\",\n        password: \"${password}\",\n        email: \"${email}\",\n        fullname: \"${fullname}\",\n        description: \"${description}\",\n        disabled: ${disabled}\n        ) {\n            description\n            email\n            fullname\n            username\n            disabled\n          }\n\n        }\n    `\n\n    function onSuccess(res){\n        alert(userOperationName+\" success\")\n        refreshData()\n        model.user = res.data[userOperationName]\n        if (userOperationName == 'create_user' && !model.logined) {\n            alert(`\"${username}\" is created.` )\n            showPage('login',true)\n        }\n        getUser(username)\n    }\n\n    doGraphQLRequest(query, onSuccess, \"userError\")\n    return false       \n}\n\n\n\nfunction getUser(username) {\n    model.user = null\n    var query =`\n    query {\n        get_user(\n        username: \"${username}\"\n        ) {\n            description\n            email\n            fullname\n            username\n            disabled\n          }\n        \n        list_app_user_role(\n        username: \"${username}\"\n        ) {\n            app_description\n            appname\n            rolename\n            username\n          }\n        \n        }\n\n    `\n\n    function onSuccess(res){\n        var u = res.data.get_user\n        u.apps = groupApps(res.data.list_app_user_role)\n        // render \n        model.user = u\n    } \n\n    doGraphQLRequest(query, onSuccess)\n    return false       \n}\n\n\n\nfunction groupApps(list_app_user_role) {\n    if (!list_app_user_role) return []\n    \n    let gr = {}\n    for (let aur of list_app_user_role ){\n        if (!gr[aur.appname]) gr[aur.appname] =[]\n        gr[aur.appname].push(aur)\n    }\n\n    let arr = []\n\n    for (let [key, value] of Object.entries(gr)) {\n        let rec = {}\n        rec.appname =key\n        rec.app_description = value[0].app_description\n        rec.items = value\n        arr.push(rec)\n    }\n    return arr\n}\n\n\n\nfunction deleteUser(username) {\n    var query =`\n    mutation {\n        delete_user(\n        username: \"${username}\"\n        ) {\n            username\n          }\n        }\n    `\n    function onSuccess(res){\n        model.user = null\n        refreshData()\n        showPage('users')\n    } \n\n    doGraphQLRequest(query, onSuccess)\n    return false       \n}\n\n\n// A P P S  *******************************************************************\n\nfunction formListAppSubmit(event) {\n    if (event) event.preventDefault()\n    model.apps = null\n    let search = document.querySelector(\"#formListApp input[name='search']\").value\n    var query =`\n    query {\n        list_app(\n        search: \"${search}\",\n        order: \"description ASC\"\n        ) {\n            length\n            list {\n              appname\n              description\n              url\n              rebase\n              public\n            }\n          }\n        }    `\n\n    function onSuccess(res){\n        model.apps = res.data.list_app.list\n    } \n\n    doGraphQLRequest(query, onSuccess)\n    return false       \n}\n\n\n\nfunction formAppSubmit(event, appOperationName = 'create_app') {\n    if (event) event.preventDefault()\n    let appname =     document.querySelector(\"#formApp input[name='appname']\"    ).value\n    let url =         document.querySelector(\"#formApp input[name='url']\"        ).value\n    let description = document.querySelector(\"#formApp input[name='description']\").value\n    let rebase =      document.querySelector(\"#formApp input[name='rebase']\"     ).value\n    let _public =     document.querySelector(\"#formApp input[name='public']\"     ).value\n    \n    var query =`\n    mutation {\n        ${appOperationName}(\n        appname: \"${appname}\",\n        url: \"${url}\",\n        description: \"${description}\",\n        rebase: \"${rebase}\",\n        public: \"${_public}\"\n        ) {\n            description\n            appname\n            url\n            rebase\n            public\n          }\n\n        }\n    `\n    function onSuccess(res){\n        alert(appOperationName+\" success\")\n        refreshData()\n        model.app = res.data[appOperationName]\n\n        getApp(appname)\n    } \n\n    doGraphQLRequest(query, onSuccess, \"appError\")\n    return false       \n}\n\n\n\nfunction getApp(appname) {\n    model.app = null\n\n    var query =`\n    query {\n        get_app(\n        appname: \"${appname}\"\n        ) {\n            description\n            appname\n            url\n            rebase\n            public\n          }\n        \n        list_app_user_role(\n        appname: \"${appname}\"\n        ) {\n            appname\n            rolename\n            user_fullname\n            user_disabled\n            username\n          }\n        \n        }\n\n    `\n\n    function onSuccess(res){\n        var a = res.data.get_app\n        a.users = groupUsers(res.data.list_app_user_role)\n        // render\n        model.app = a\n    } \n\n    doGraphQLRequest(query, onSuccess)\n    return false       \n}\n\n\nfunction groupUsers(list_app_user_role) {\n    let gr = {}\n    for (let aur of list_app_user_role ){\n        if (!gr[aur.username]) gr[aur.username] =[]\n        gr[aur.username].push(aur)\n    }\n\n    let arr = []\n\n    for (let [key, value] of Object.entries(gr)) {\n        let rec = {}\n        rec.username =key\n        rec.user_fullname = value[0].user_fullname\n        rec.items = value\n        arr.push(rec)\n    }\n    return arr\n}\n\n\n\nfunction deleteApp(appname) {\n    var query =`\n    mutation {\n        delete_app(\n        appname: \"${appname}\"\n        ) {\n            appname\n          }\n        }\n    `\n    function onSuccess(res){\n        model.app = null\n        refreshData()\n        showPage('apps') ;\n    } \n\n    doGraphQLRequest(query, onSuccess)\n    return false       \n}\n\n\n\n\n// A P P   U S E R   R O L E   **************************************************************************************************\n\nfunction getAllApps(event) {\n    if (event) event.preventDefault()\n    model.allApps = null\n    var query =`\n    query {\n        list_app(\n        order: \"appname ASC\"\n        ) {\n            length\n            list {\n              appname\n              description\n              url\n              rebase\n              public \n            }\n          }\n        }    `\n\n    function onSuccess(res){\n        model.allApps = res.data.list_app.list\n    } \n\n    doGraphQLRequest(query, onSuccess)\n    return false       \n}\n\n\nfunction getAllUsers(event) {\n    if (event) event.preventDefault()\n    model.allUsers = null\n    var query =`\n    query {\n        list_user(\n        order: \"fullname ASC\"\n        ) {\n            length\n            list {\n              username\n              fullname\n              email\n              description\n              disabled\n            }\n          }\n        }    `\n\n    function onSuccess(res){\n        model.allUsers = res.data.list_user.list\n    } \n\n    doGraphQLRequest(query, onSuccess)\n    return false       \n}\n\nfunction formListRoleSubmit(event) {\n    if (event && event.preventDefault ) event.preventDefault()\n    model.app_user_roles = null\n    let appname =  document.getElementById(\"allApps\").value\n    let username = document.getElementById(\"allUsers\").value\n    if (!appname || !username) \n        return\n\n    var query =`\n    query {\n        list_app_user_role(\n        appname: \"${appname}\",\n        username: \"${username}\"\n        ) {\n            rolename\n          }\n        }        \n        `\n\n    function onSuccess(res){\n        model.app_user_roles = res.data.list_app_user_role\n    } \n\n    doGraphQLRequest(query, onSuccess)\n    return false       \n}\n\n\nfunction modifyRole(action,appname,username,rolename, onsuccess ) {\n    if (!appname || !username || !rolename) return\n\n    var query =`\n    mutation {\n        ${action}_app_user_role(\n        appname: \"${appname}\",\n        username: \"${username}\",\n        rolename: \"${rolename}\"\n        ) {\n            rolename\n            appname\n            username\n          }\n        }\n    `\n    function onSuccess(res){\n        if (onsuccess) onsuccess()\n    }\n\n    doGraphQLRequest(query, onSuccess)\n    return false       \n}\n\n// works when input values on roles page change\nfunction refreshRoles() {\n    let allUsersValue = document.getElementById(\"allUsers\").value\n    if (allUsersValue) {\n        let ui = document.querySelector(`#allUsersDataList>option[value='${allUsersValue}']`).innerText\n        document.getElementById('userInfo').innerText = ui   \n    }\n\n    let allAppsValue = document.getElementById(\"allApps\").value\n    if (allAppsValue) {\n        let ai = document.querySelector(`#allAppsDataList>option[value='${allAppsValue}']`).innerText\n        document.getElementById('appInfo').innerText = ai\n    }\n\n    if (allUsersValue && allAppsValue) \n        formListRoleSubmit() \n}\n\n\nfunction filterRows(selector, value ){\n    var v = value.toLowerCase()\n    var rows = document.querySelectorAll(selector)\n    rows.forEach(e => {\n        var txt = e.innerText.toLowerCase()\n        if (txt.indexOf(v) == -1) {\n            e.classList.add(\"hidden\")\n        } else {\n            e.classList.remove(\"hidden\")\n        }\n    });\n}\n\nfunction hideElements(selector) {\n    document.querySelectorAll(selector).forEach(e => e.classList.add(\"hidden\"));\n}\n\n\nfunction showElements(selector) {\n    document.querySelectorAll(selector).forEach(e => e.classList.remove(\"hidden\"));\n}\n\nfunction addClass(selector, classname) {\n        document.querySelectorAll(selector).forEach(e => e.classList.add(classname));\n}\n\nfunction removeClass(selector, classname) {\n    document.querySelectorAll(selector).forEach(e => e.classList.remove(classname));\n}\n\n\nfunction hidePassword() {\n    document.querySelector(\"#formUser input[name='password']\").setAttribute('type','password')\n}\n\nfunction showPassword() {\n    document.querySelector(\"#formUser input[name='password']\").setAttribute('type','text')\n}\n\nfunction removeQueryStringFromBrowserURL() {\n    let url = document.location.href\n    let url1 = url.replace(/\\?.*/, '')\n    let url2 = url1+\"?url=\"+model.origin\n    history.replaceState(null,null,url2)   \n}\n\n\nfunction generatePassword() {\n    function newPassword (n) {\n        let pickSymbol =(s) => s[Math.floor(Math.random()*s.length)]\n        var symbolSets =[\"bcdfghjklmnpqrstvwxz\",\"aeiou\"] \n        var password = ''\n        for (let i=0; i<n; i++){\n            password += pickSymbol(symbolSets[i%symbolSets.length])\n        }\n        return password\n    }\n\n    document.querySelector(\"#formUser input[name='password']\").value = newPassword(9)\n}\n\nfunction buildSocialIcons(url) {\n        fetch(url).then(x => x.json())\n        .then( t => renderOauthProvidersJSON(t) )\n        .catch( err => {\n            console.log(\"fetch error:\",err)\n            return\n            }\n        )  \n}\n\nfunction renderOauthProvidersJSON(jsn) {\n    let el = document.getElementById('socialIcons')\n    \n    if (!el) return\n    \n    el.innerHTML = ''\n    let icons = []\n    for (let [k,v] of Object.entries(jsn) ) {\n        icons.push(`\n        <div class=\"social-element\">\n        <a class=\"button button-clear\" title=\"login via ${k}\" href=\"${model.origin + v[0]}\">\n        ${k}\n        <br>\n        <img class=\"social-icon\" src=\"images/${k}.svg\">\n        </a>\n        <!--\n        <br>\n        <a class=\"social-logout\" title=\"logout from ${k}\" href=\"${model.origin + v[1]}\">logout</a>\n        -->\n        </div>\n        \n        \n        `)\n    }\n    \n    \n    if (icons.length > 0){\n        el.innerHTML = '<div class=\"socialHeader\">войти через</div>' + icons.join(' ')\n        showElements(\"#selfRegHelpText\")\n        removeClass('#socialIcons', 'transparent')\n    } else {\n        hideElements(\"#selfRegHelpText\")\n    }\n}\n\n\n\nfunction getNewCaptcha() {\n    let uri = model.origin+\"/captcha?\"+ new Date().getTime()\n    document.getElementById(\"captchaImg\").src = uri\n    return false\n}\n\n\nfunction clearLoginForm() {\n    document.getElementById(\"loginUsername\").value = \"\"\n    document.getElementById(\"loginPassword\").value = \"\"\n    document.getElementById(\"loginCaptcha\").value = \"\"\n    document.getElementById(\"loginError\").innerText = \"\"\n    document.getElementById(\"socialLoginError\").innerHTML = \"\"\n    document.getElementById(\"oauth2email\").innerHTML = \"\"\n}\n\n\nfunction logout() {\n    logoutGraphQLFormSubmit()\n    clearLoginForm()\n    showPage('login',true)\n    isSelfRegAllowed()\n    model.captchaRequired = false\n    return false\n}\n\n\n// refreshData() если пользователь залогинен наполняет модель данными,\n// в противном случае или обнуляет модель.\nfunction refreshData() {\n    if (model.logined) {\n        getAllApps()\n        getAllUsers()\n        formListAppSubmit()\n        formListUserSubmit()  \n    } else {\n        // nullify model's inner props\n        for (const k of Object.keys(model)) {\n            if (k.startsWith('_')) {\n                model[k] = null\n            }\n        }\n        isSelfRegAllowed()\n   }    \n}\n\nfunction getCurrentPageID(){\n    var p = location.hash.slice(1)\n    return (!p || p.includes('=')) ? 'apps' : p\n}\n\n// refreshApp обновляет данные модели и GUI\nfunction refreshApp() {\n    refreshData()\n    \n    if (model.logined) {\n        let page = getCurrentPageID()\n        showPage(page) \n        showElements('#menu')     \n        hideElements('#menuUnlogined')     \n    } else {\n        showPage('login',true)\n        hideElements('#menu')\n        showElements('#menuUnlogined')\n    }  \n}\n\n\n\nwindow.onhashchange = function(event) {\n    model.debug && console.log(\"onhashchange\", event)\n    var newpage = event.newURL.split('#')[1]\n    if (newpage) \n        showPage(newpage)\n}\n\n\nfunction setAppParams(){\n    model.oauth2email = model.urlParams.get('oauth2email') || ''\n    model.oauth2name = model.urlParams.get('oauth2name') || ''\n    model.oauth2id = model.oauth2email.replace(/@.*/,'')\n    document.getElementById('oauth2email').innerHTML = model.oauth2email\n\n    var url = model.urlParams.get('url')\n    var css = model.urlParams.get('css')\n    var oauth2error = model.urlParams.get('oauth2error')\n    var alrt = model.urlParams.get('alert')\n    if (alrt) alert(alrt)\n    document.getElementById('socialLoginError').innerHTML = oauth2error\n    if (css) document.getElementById('theme').href = css\n    model.origin = url ? url : 'https://auth-proxy.rg.ru'\n    removeQueryStringFromBrowserURL()\n    //?\n    model.captchaRequired = false\n}\n\n\n\nfunction init() {\n    setAppParams()\n    getLoginedUser()\n    refreshApp()      \n}\n\n\n// O N   P A G E   L O A D  ****************************************************************************************\n\ninit()\n"],"names":["delayTimeout","model","debug","oauth2email","oauth2name","oauth2id","priv_origin","origin","v","this","document","getElementById","innerHTML","buildSocialIcons","href","templatesCache","logined","_loginedUser","urlParams","URLSearchParams","window","location","search","loginedUser","innerText","username","refreshApp","_selfRegAllowed","selfRegAllowed","showElements","hideElements","_captchaRequired","captchaRequired","_authRoles","authRoles","isAdmin","renderPage","some","e","rolename","_user","user","_app","app","_users","users","_apps","apps","all_app_options","all_user_options","_allApps","allApps","createOptions","querySelector","_allUsers","allUsers","_app_user_roles","app_user_roles","_params","params","_memstat","memstat","JSON","stringify","selectValues","keyProp","textProp1","textProp2","output","forEach","value","push","join","highlightTab","tabid","removeClass","addClass","split","showPage","pageid","dontpush","a","pageid0","id","text","focus","history","state","pushState","getApp","getUser","renderTemplateFile","templateFile","data","targetSelector","renderTemplate","template","rendered","Mustache","render","cachedTemlpate","console","info","fetch","then","x","t","elemSelector","alertOnError","msg","alert","delayFunc","f","delay","clearTimeout","setTimeout","searchApps","checked","searchAppsInModel","formListAppSubmit","trim","replace","r","RegExp","found","filter","s","Object","values","test","sortAppsBy","prop","sort","b","appname","searchUsers","searchUsersInModel","formListUserSubmit","sortUsersBy","doGraphQLRequest","query","responseHandler","errorElementID","method","credentials","body","variables","res","ok","json","Error","log","errors","message","catch","error","loginGraphQLFormSubmit","event","preventDefault","getLoginedUser","clearLoginForm","logoutGraphQLFormSubmit","isSelfRegAllowed","is_selfreg_allowed","isCaptchaRequired","is_captcha_required","is_required","getNewCaptcha","generateNewPassword","generate_password","get_logined_user","getAuthRoles","list_app_user_role","getParams","p","get_params","setParams","set_params","getMemstat","m","list_user","list","formUserSubmit","userOperationName","password","email","fullname","description","disabled","refreshData","u","get_user","groupApps","gr","aur","arr","key","entries","rec","app_description","items","deleteUser","list_app","formAppSubmit","appOperationName","url","rebase","_public","get_app","groupUsers","user_fullname","deleteApp","getAllApps","getAllUsers","formListRoleSubmit","modifyRole","action","onsuccess","refreshRoles","allUsersValue","ui","allAppsValue","ai","filterRows","selector","toLowerCase","querySelectorAll","indexOf","classList","add","remove","classname","hidePassword","setAttribute","showPassword","removeQueryStringFromBrowserURL","url2","replaceState","generatePassword","n","pickSymbol","Math","floor","random","length","symbolSets","i","newPassword","renderOauthProvidersJSON","err","jsn","el","icons","k","uri","Date","getTime","src","logout","keys","startsWith","getCurrentPageID","hash","slice","includes","setAppParams","get","css","oauth2error","alrt","init","onhashchange","newpage","newURL"],"mappings":"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"}